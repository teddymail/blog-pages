{"title":"php信号量控制","date":"2018-02-05T07:33:01.000Z","source":"_posts/2018-02-05.php信号量控制.md","raw":"---\ntitle: php信号量控制\ndate: 2018-02-05 15:33:01\ntags: [php,php7,shared-memory]\n---\n>上一篇文章学习到了php的共享内存，但是仅仅这个是不够的，我们还需要更精确的控制，避免多个进程同时写入共享内存的情况发生，我们还需奥信号量的控制等内容\n\n* 准备\nPHP 也提供了类似的内置扩展 sysvsem（这个扩展在 Windows 环境下没有，文档中将 ftok 函数也归到这个扩展中，但实际上 ftok 是在标准函数库中提供的，所以在 Windows 下也是可用的）。\n\n检查扩展是否支持通过phpinfo() 检测加载情况\n\n```\nsysvmsg\n\nsysvmsg support => enabled\nRevision => $Id: 8fc76436c42ce984b2ad34ae6b27082d5e66c104 $\n```\n\n有以上这样的就属于已经正常加载可以使用这些功能啦\n\n\n* 知识点介绍\n\n- sem_get()   获取信号标识\n- sem_acquire()  获取信号量\n- sem_release() 信号量发布\n- sem_remove() 删除信号量\n- shm_attach()  创建或打开共享内存段\n- shm_detach() 断开与共享内存段的连接\n\n\n[相关函数列表](http://php.net/manual/zh/ref.sem.php)\n\n\n* 样例\n\n```php7\n$id_key = ftok(__FILE__, 't');\n$sem_id = sem_get($id_key);\n# 请求信号控制权\nif (sem_acquire($sem_id)) {\n    $shm_id = shmop_open($id_key, 'c', 0644, 8);\n    # 读取并写入数据\n    $count = (int) shmop_read($shm_id, 0, 8) + 1;\n    shmop_write($shm_id, str_pad($count, 8, '0', STR_PAD_LEFT), 0);\n    // echo shmop_read($shm_id, 0, 8);\n    # 关闭内存块\n    shmop_close($shm_id);\n    # 释放信号\n    sem_release($sem_id);\n}\n```\n\n* 测试\n\n![运行效果图](http://img.yuekang.org.cn/WX20180205-161115@2x.png)\n\n\n![循环中运行100次效果图](http://img.yuekang.org.cn/WX20180205-161243@2x.png)\n\n\n>最后一定要注意关闭信号量，以免造成上一个信号量一直被占用造成下一个无法使用的问题！！\n","slug":"2018-02-05-php信号量控制","published":true,"updated":"2024-09-02T09:06:11.423Z","_id":"cm0p55ajo0013ywsngv7zbl42","comments":true,"layout":"post","photos":[],"html":"<blockquote>\n<p>上一篇文章学习到了php的共享内存，但是仅仅这个是不够的，我们还需要更精确的控制，避免多个进程同时写入共享内存的情况发生，我们还需奥信号量的控制等内容</p>\n</blockquote>\n<ul>\n<li>准备<br>PHP 也提供了类似的内置扩展 sysvsem（这个扩展在 Windows 环境下没有，文档中将 ftok 函数也归到这个扩展中，但实际上 ftok 是在标准函数库中提供的，所以在 Windows 下也是可用的）。</li>\n</ul>\n<p>检查扩展是否支持通过phpinfo() 检测加载情况</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sysvmsg</span><br><span class=\"line\"></span><br><span class=\"line\">sysvmsg support =&gt; enabled</span><br><span class=\"line\">Revision =&gt; $Id: 8fc76436c42ce984b2ad34ae6b27082d5e66c104 $</span><br></pre></td></tr></table></figure>\n\n<p>有以上这样的就属于已经正常加载可以使用这些功能啦</p>\n<ul>\n<li>知识点介绍</li>\n</ul>\n<ul>\n<li>sem_get()   获取信号标识</li>\n<li>sem_acquire()  获取信号量</li>\n<li>sem_release() 信号量发布</li>\n<li>sem_remove() 删除信号量</li>\n<li>shm_attach()  创建或打开共享内存段</li>\n<li>shm_detach() 断开与共享内存段的连接</li>\n</ul>\n<p><a href=\"http://php.net/manual/zh/ref.sem.php\">相关函数列表</a></p>\n<ul>\n<li>样例</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$id_key = ftok(__FILE__, &#x27;t&#x27;);</span><br><span class=\"line\">$sem_id = sem_get($id_key);</span><br><span class=\"line\"># 请求信号控制权</span><br><span class=\"line\">if (sem_acquire($sem_id)) &#123;</span><br><span class=\"line\">    $shm_id = shmop_open($id_key, &#x27;c&#x27;, 0644, 8);</span><br><span class=\"line\">    # 读取并写入数据</span><br><span class=\"line\">    $count = (int) shmop_read($shm_id, 0, 8) + 1;</span><br><span class=\"line\">    shmop_write($shm_id, str_pad($count, 8, &#x27;0&#x27;, STR_PAD_LEFT), 0);</span><br><span class=\"line\">    // echo shmop_read($shm_id, 0, 8);</span><br><span class=\"line\">    # 关闭内存块</span><br><span class=\"line\">    shmop_close($shm_id);</span><br><span class=\"line\">    # 释放信号</span><br><span class=\"line\">    sem_release($sem_id);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>测试</li>\n</ul>\n<p><img src=\"http://img.yuekang.org.cn/WX20180205-161115@2x.png\" alt=\"运行效果图\"></p>\n<p><img src=\"http://img.yuekang.org.cn/WX20180205-161243@2x.png\" alt=\"循环中运行100次效果图\"></p>\n<blockquote>\n<p>最后一定要注意关闭信号量，以免造成上一个信号量一直被占用造成下一个无法使用的问题！！</p>\n</blockquote>\n","excerpt":"","more":"<blockquote>\n<p>上一篇文章学习到了php的共享内存，但是仅仅这个是不够的，我们还需要更精确的控制，避免多个进程同时写入共享内存的情况发生，我们还需奥信号量的控制等内容</p>\n</blockquote>\n<ul>\n<li>准备<br>PHP 也提供了类似的内置扩展 sysvsem（这个扩展在 Windows 环境下没有，文档中将 ftok 函数也归到这个扩展中，但实际上 ftok 是在标准函数库中提供的，所以在 Windows 下也是可用的）。</li>\n</ul>\n<p>检查扩展是否支持通过phpinfo() 检测加载情况</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sysvmsg</span><br><span class=\"line\"></span><br><span class=\"line\">sysvmsg support =&gt; enabled</span><br><span class=\"line\">Revision =&gt; $Id: 8fc76436c42ce984b2ad34ae6b27082d5e66c104 $</span><br></pre></td></tr></table></figure>\n\n<p>有以上这样的就属于已经正常加载可以使用这些功能啦</p>\n<ul>\n<li>知识点介绍</li>\n</ul>\n<ul>\n<li>sem_get()   获取信号标识</li>\n<li>sem_acquire()  获取信号量</li>\n<li>sem_release() 信号量发布</li>\n<li>sem_remove() 删除信号量</li>\n<li>shm_attach()  创建或打开共享内存段</li>\n<li>shm_detach() 断开与共享内存段的连接</li>\n</ul>\n<p><a href=\"http://php.net/manual/zh/ref.sem.php\">相关函数列表</a></p>\n<ul>\n<li>样例</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$id_key = ftok(__FILE__, &#x27;t&#x27;);</span><br><span class=\"line\">$sem_id = sem_get($id_key);</span><br><span class=\"line\"># 请求信号控制权</span><br><span class=\"line\">if (sem_acquire($sem_id)) &#123;</span><br><span class=\"line\">    $shm_id = shmop_open($id_key, &#x27;c&#x27;, 0644, 8);</span><br><span class=\"line\">    # 读取并写入数据</span><br><span class=\"line\">    $count = (int) shmop_read($shm_id, 0, 8) + 1;</span><br><span class=\"line\">    shmop_write($shm_id, str_pad($count, 8, &#x27;0&#x27;, STR_PAD_LEFT), 0);</span><br><span class=\"line\">    // echo shmop_read($shm_id, 0, 8);</span><br><span class=\"line\">    # 关闭内存块</span><br><span class=\"line\">    shmop_close($shm_id);</span><br><span class=\"line\">    # 释放信号</span><br><span class=\"line\">    sem_release($sem_id);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>测试</li>\n</ul>\n<p><img src=\"http://img.yuekang.org.cn/WX20180205-161115@2x.png\" alt=\"运行效果图\"></p>\n<p><img src=\"http://img.yuekang.org.cn/WX20180205-161243@2x.png\" alt=\"循环中运行100次效果图\"></p>\n<blockquote>\n<p>最后一定要注意关闭信号量，以免造成上一个信号量一直被占用造成下一个无法使用的问题！！</p>\n</blockquote>\n","path":"2018/02/05/2018-02-05-php信号量控制/","permalink":"https://yuekang.org.cn/2018/02/05/2018-02-05-php%E4%BF%A1%E5%8F%B7%E9%87%8F%E6%8E%A7%E5%88%B6/","tags":[{"name":"php","_id":"cm0p55akg0033ywsne6e85fa9","slug":"php","path":"tags/php/","permalink":"https://yuekang.org.cn/tags/php/","length":5},{"name":"php7","_id":"cm0p55akh003fywsnexvd8x7g","slug":"php7","path":"tags/php7/","permalink":"https://yuekang.org.cn/tags/php7/","length":1},{"name":"shared-memory","_id":"cm0p55akh003hywsna1hbfxwu","slug":"shared-memory","path":"tags/shared-memory/","permalink":"https://yuekang.org.cn/tags/shared-memory/","length":2}],"categories":[],"prev":{"title":"爬虫常见请求头总结","date":"2018-02-19T12:39:55.000Z","slug":"2018-02-19-爬虫常见请求头总结","published":true,"updated":"2024-09-02T09:06:11.424Z","_id":"cm0p55ajp0017ywsn0tadfcx5","layout":"post","photos":[],"excerpt":"","path":"2018/02/19/2018-02-19-爬虫常见请求头总结/","permalink":"https://yuekang.org.cn/2018/02/19/2018-02-19-%E7%88%AC%E8%99%AB%E5%B8%B8%E8%A7%81%E8%AF%B7%E6%B1%82%E5%A4%B4%E6%80%BB%E7%BB%93/","__post":true},"next":{"title":"php共享内存学习","date":"2018-02-05T03:43:37.000Z","slug":"2018-02-05-php共享内存学习","published":true,"updated":"2024-09-02T09:06:11.422Z","_id":"cm0p55ajp0016ywsn5ae6gxs9","layout":"post","photos":[],"excerpt":"","path":"2018/02/05/2018-02-05-php共享内存学习/","permalink":"https://yuekang.org.cn/2018/02/05/2018-02-05-php%E5%85%B1%E4%BA%AB%E5%86%85%E5%AD%98%E5%AD%A6%E4%B9%A0/","__post":true},"__post":true}