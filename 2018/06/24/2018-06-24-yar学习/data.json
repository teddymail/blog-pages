{"title":"yar学习","date":"2018-06-24T11:48:51.000Z","source":"_posts/2018-06-24.yar学习.md","raw":"---\ntitle: yar学习\ndate: 2018-06-24 19:48:51\ntags: [RPC,php,framework]\n---\n\n>Yar(yet another RPC framework), RPC框架, 和现有的RPC框架(xml-rpc, soap)不同, 这是一个轻量级的框架, 支持多种打包协议(msgpack, json, php), 并且最重要的一个特点是, 它是可并行化的...\n\n# 特征\n\n1. 快速，简单，简单\n2. 并发RPC调用\n3. 支持多个数据包装器（内置php，json，msgpack）\n4. 支持多种传输协议（http实现，稍后将支持tcp / unix）\n5. 详细的调试信息\n\n\n# 环境准备\n\n作者要求至少满足以下条件\n\n1. PHP 5.2+\n2. Curl\n3. Json\n4. Msgpack (Optional)： 新型二进制打包协议比json和xml快很多，和序列化的效率差不多\n\n# 环境安装\n\n1. 安装yar\n\n```php\npecl install yar\n```\n\n2. 安装msgpack\n\n```php\npecl install msgpack\n```\n3. 运行时配置\n\n```\nyar.timeout //默认5000（ms）\nyar.connect_timeout //默认值1000（ms）\nyar.packager //默认“php”，当使用--enable-msgpack然后默认“msgpack”构建时，它应该是“php”，“json”，“msgpack”\nyar.debug //默认关闭\nyar.expose_info //默认为On，是否输出GET请求的API信息\nyar.content_type //默认的“application / octet-stream”\nyar.allow_persistent //默认关闭\n```\n# 编写第一个server\n\n```php\nclass Api {\n    /**\n     * 测试Name\n     * @param $key\n     * @param $value\n     * @return mixed\n     */\n    public function getName($key, $value= 'foo'){\n        return $value;\n    }\n\n    public function getB($key) {\n\n    }\n}\n\n$service = new Yar_Server(new Api());\n$service->handle();\n```\n\n直接访问网页可以看到对应的内容已经展现出来了\n\n![运行效果](http://img.yuekang.org.cn/blog/images/2018062401.png)\n\n\n# 编写第一个客户端请求rpc接口\n\n```php\n$client = new Yar_Client(\"https://admin.myhost.top/Api/\");\n$result = $client->getName(\"key\",\"my value\");\nvar_dump($result);\n\n```\n\n请求后可以获得如下结果\n\n```php\nstring(8) \"my value\"\n```\n\n至此一个简单的rpc功能完成了，后续会学习更深层的使用方式\n\n\n\n\n","slug":"2018-06-24-yar学习","published":true,"updated":"2024-09-08T06:12:12.642Z","_id":"cm0w4eg1c001letsnefzs73rz","comments":true,"layout":"post","photos":[],"html":"<blockquote>\n<p>Yar(yet another RPC framework), RPC框架, 和现有的RPC框架(xml-rpc, soap)不同, 这是一个轻量级的框架, 支持多种打包协议(msgpack, json, php), 并且最重要的一个特点是, 它是可并行化的…</p>\n</blockquote>\n<h1 id=\"特征\"><a href=\"#特征\" class=\"headerlink\" title=\"特征\"></a>特征</h1><ol>\n<li>快速，简单，简单</li>\n<li>并发RPC调用</li>\n<li>支持多个数据包装器（内置php，json，msgpack）</li>\n<li>支持多种传输协议（http实现，稍后将支持tcp &#x2F; unix）</li>\n<li>详细的调试信息</li>\n</ol>\n<h1 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h1><p>作者要求至少满足以下条件</p>\n<ol>\n<li>PHP 5.2+</li>\n<li>Curl</li>\n<li>Json</li>\n<li>Msgpack (Optional)： 新型二进制打包协议比json和xml快很多，和序列化的效率差不多</li>\n</ol>\n<h1 id=\"环境安装\"><a href=\"#环境安装\" class=\"headerlink\" title=\"环境安装\"></a>环境安装</h1><ol>\n<li>安装yar</li>\n</ol>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pecl install yar</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>安装msgpack</li>\n</ol>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pecl install msgpack</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>运行时配置</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yar.timeout //默认5000（ms）</span><br><span class=\"line\">yar.connect_timeout //默认值1000（ms）</span><br><span class=\"line\">yar.packager //默认“php”，当使用--enable-msgpack然后默认“msgpack”构建时，它应该是“php”，“json”，“msgpack”</span><br><span class=\"line\">yar.debug //默认关闭</span><br><span class=\"line\">yar.expose_info //默认为On，是否输出GET请求的API信息</span><br><span class=\"line\">yar.content_type //默认的“application / octet-stream”</span><br><span class=\"line\">yar.allow_persistent //默认关闭</span><br></pre></td></tr></table></figure>\n<h1 id=\"编写第一个server\"><a href=\"#编写第一个server\" class=\"headerlink\" title=\"编写第一个server\"></a>编写第一个server</h1><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Api</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 测试Name</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> $key</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> $value</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> mixed</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getName</span>(<span class=\"params\"><span class=\"variable\">$key</span>, <span class=\"variable\">$value</span>= <span class=\"string\">&#x27;foo&#x27;</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable\">$value</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getB</span>(<span class=\"params\"><span class=\"variable\">$key</span></span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$service</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Yar_Server</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Api</span>());</span><br><span class=\"line\"><span class=\"variable\">$service</span>-&gt;<span class=\"title function_ invoke__\">handle</span>();</span><br></pre></td></tr></table></figure>\n\n<p>直接访问网页可以看到对应的内容已经展现出来了</p>\n<p><img src=\"http://img.yuekang.org.cn/blog/images/2018062401.png\" alt=\"运行效果\"></p>\n<h1 id=\"编写第一个客户端请求rpc接口\"><a href=\"#编写第一个客户端请求rpc接口\" class=\"headerlink\" title=\"编写第一个客户端请求rpc接口\"></a>编写第一个客户端请求rpc接口</h1><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$client</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Yar_Client</span>(<span class=\"string\">&quot;https://admin.myhost.top/Api/&quot;</span>);</span><br><span class=\"line\"><span class=\"variable\">$result</span> = <span class=\"variable\">$client</span>-&gt;<span class=\"title function_ invoke__\">getName</span>(<span class=\"string\">&quot;key&quot;</span>,<span class=\"string\">&quot;my value&quot;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$result</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>请求后可以获得如下结果</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">string</span>(<span class=\"number\">8</span>) <span class=\"string\">&quot;my value&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>至此一个简单的rpc功能完成了，后续会学习更深层的使用方式</p>\n","excerpt":"","more":"<blockquote>\n<p>Yar(yet another RPC framework), RPC框架, 和现有的RPC框架(xml-rpc, soap)不同, 这是一个轻量级的框架, 支持多种打包协议(msgpack, json, php), 并且最重要的一个特点是, 它是可并行化的…</p>\n</blockquote>\n<h1 id=\"特征\"><a href=\"#特征\" class=\"headerlink\" title=\"特征\"></a>特征</h1><ol>\n<li>快速，简单，简单</li>\n<li>并发RPC调用</li>\n<li>支持多个数据包装器（内置php，json，msgpack）</li>\n<li>支持多种传输协议（http实现，稍后将支持tcp &#x2F; unix）</li>\n<li>详细的调试信息</li>\n</ol>\n<h1 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h1><p>作者要求至少满足以下条件</p>\n<ol>\n<li>PHP 5.2+</li>\n<li>Curl</li>\n<li>Json</li>\n<li>Msgpack (Optional)： 新型二进制打包协议比json和xml快很多，和序列化的效率差不多</li>\n</ol>\n<h1 id=\"环境安装\"><a href=\"#环境安装\" class=\"headerlink\" title=\"环境安装\"></a>环境安装</h1><ol>\n<li>安装yar</li>\n</ol>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pecl install yar</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>安装msgpack</li>\n</ol>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pecl install msgpack</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>运行时配置</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yar.timeout //默认5000（ms）</span><br><span class=\"line\">yar.connect_timeout //默认值1000（ms）</span><br><span class=\"line\">yar.packager //默认“php”，当使用--enable-msgpack然后默认“msgpack”构建时，它应该是“php”，“json”，“msgpack”</span><br><span class=\"line\">yar.debug //默认关闭</span><br><span class=\"line\">yar.expose_info //默认为On，是否输出GET请求的API信息</span><br><span class=\"line\">yar.content_type //默认的“application / octet-stream”</span><br><span class=\"line\">yar.allow_persistent //默认关闭</span><br></pre></td></tr></table></figure>\n<h1 id=\"编写第一个server\"><a href=\"#编写第一个server\" class=\"headerlink\" title=\"编写第一个server\"></a>编写第一个server</h1><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Api</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 测试Name</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> $key</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> $value</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> mixed</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getName</span>(<span class=\"params\"><span class=\"variable\">$key</span>, <span class=\"variable\">$value</span>= <span class=\"string\">&#x27;foo&#x27;</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable\">$value</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getB</span>(<span class=\"params\"><span class=\"variable\">$key</span></span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$service</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Yar_Server</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Api</span>());</span><br><span class=\"line\"><span class=\"variable\">$service</span>-&gt;<span class=\"title function_ invoke__\">handle</span>();</span><br></pre></td></tr></table></figure>\n\n<p>直接访问网页可以看到对应的内容已经展现出来了</p>\n<p><img src=\"http://img.yuekang.org.cn/blog/images/2018062401.png\" alt=\"运行效果\"></p>\n<h1 id=\"编写第一个客户端请求rpc接口\"><a href=\"#编写第一个客户端请求rpc接口\" class=\"headerlink\" title=\"编写第一个客户端请求rpc接口\"></a>编写第一个客户端请求rpc接口</h1><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$client</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Yar_Client</span>(<span class=\"string\">&quot;https://admin.myhost.top/Api/&quot;</span>);</span><br><span class=\"line\"><span class=\"variable\">$result</span> = <span class=\"variable\">$client</span>-&gt;<span class=\"title function_ invoke__\">getName</span>(<span class=\"string\">&quot;key&quot;</span>,<span class=\"string\">&quot;my value&quot;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"variable\">$result</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>请求后可以获得如下结果</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">string</span>(<span class=\"number\">8</span>) <span class=\"string\">&quot;my value&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>至此一个简单的rpc功能完成了，后续会学习更深层的使用方式</p>\n","path":"2018/06/24/2018-06-24-yar学习/","permalink":"https://yuekang.org.cn/2018/06/24/2018-06-24-yar%E5%AD%A6%E4%B9%A0/","tags":[{"name":"php","_id":"cm0w4eg1v003detsn3u238vme","slug":"php","path":"tags/php/","permalink":"https://yuekang.org.cn/tags/php/","length":5},{"name":"framework","_id":"cm0w4eg1v003jetsndkmz01tf","slug":"framework","path":"tags/framework/","permalink":"https://yuekang.org.cn/tags/framework/","length":3},{"name":"RPC","_id":"cm0w4eg20004vetsn8vqb86hj","slug":"RPC","path":"tags/RPC/","permalink":"https://yuekang.org.cn/tags/RPC/","length":1}],"categories":[],"prev":{"title":"Yii-mail模块学习","date":"2018-06-27T14:21:24.000Z","slug":"2018-06-27-Yii-mail模块学习","published":true,"updated":"2024-09-08T06:12:12.668Z","_id":"cm0w4eg1d001netsn1wvb7fbv","layout":"post","photos":[],"excerpt":"","path":"2018/06/27/2018-06-27-Yii-mail模块学习/","permalink":"https://yuekang.org.cn/2018/06/27/2018-06-27-Yii-mail%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A0/","__post":true},"next":{"title":"PHP7- I/O模型学习","date":"2018-06-21T14:38:44.000Z","slug":"2018-06-21-PHP7-IO模型学习","published":true,"updated":"2024-09-08T06:12:12.683Z","_id":"cm0w4eg1c001ietsngvfw69hl","layout":"post","photos":[],"excerpt":"","path":"2018/06/21/2018-06-21-PHP7-IO模型学习/","permalink":"https://yuekang.org.cn/2018/06/21/2018-06-21-PHP7-IO%E6%A8%A1%E5%9E%8B%E5%AD%A6%E4%B9%A0/","__post":true},"__post":true}