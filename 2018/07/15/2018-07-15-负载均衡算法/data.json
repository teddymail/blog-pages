{"title":"负载均衡算法","date":"2018-07-15T14:32:32.000Z","source":"_posts/2018-07-15.负载均衡算法.md","raw":"---\ntitle: 负载均衡算法\ndate: 2018-07-15 22:32:32\ntags: [负载均衡]\n---\n\n## 本地流量管理技术主要有一下几种负载均衡算法\n\n1. 静态负载均衡算法包括：轮询，比率，优先权\n\n    1.1 轮询（Round Robin）：顺序循环将请求一次顺序循环地连接每个服务器。当其中某个服务器发生第二到第7 层的故障，BIG-IP 就把其从顺序循环队列中拿出，不参加下一次的轮询，直到其恢复正常。\n\n    1.2 比率（Ratio）：给每个服务器分配一个加权值为比例，根椐这个比例，把用户的请求分配到每个服务器。当其中某个服务器发生第二到第7 层的故障，BIG-IP 就把其从服务器队列中拿出，不参加下一次的用户请求的分配, 直到其恢复正常。\n\n    1.3 优先权（Priority）：给所有服务器分组,给每个组定义优先权，BIG-IP 用户的请求，分配给优先级最高的服务器组（在同一组内，采用轮询或比率算法，分配用户的请求）；当最高优先级中所有服务器出现故障，BIG-IP 才将请求送给次优先级的服务器组。这种方式，实际为用户提供一种热备份的方式。\n\n2. 动态负载均衡算法包括: 最少连接数,最快响应速度，观察方法，预测法，动态性能分配，动态服务器补充，服务质量，服务类型，规则模式。\n\n    2.1 最少的连接方式（Least Connection）：传递新的连接给那些进行最少连接处理的服务器。当其中某个服务器发生第二到第7 层的故障，BIG-IP 就把其从服务器队列中拿出，不参加下一次的用户请求的分配, 直到其恢复正常。\n\n    2.2 最快模式（Fastest）：传递连接给那些响应最快的服务器。当其中某个服务器发生第二到第7 层的故障，BIG-IP 就把其从服务器队列中拿出，不参加下一次的用户请求的分配，直到其恢复正常。\n\n    2.3 观察模式（Observed）：连接数目和响应时间以这两项的最佳平衡为依据为新的请求选择服务器。当其中某个服务器发生第二到第7 层的故障，BIG-IP就把其从服务器队列中拿出，不参加下一次的用户请求的分配，直到其恢复正常。\n\n    2.4 预测模式（Predictive）：BIG-IP利用收集到的服务器当前的性能指标，进行预测分析，选择一台服务器在下一个时间片内，其性能将达到最佳的服务器相应用户的请求。(被BIG-IP 进行检测)\n\n    2.5 动态性能分配(Dynamic Ratio-APM):BIG-IP 收集到的应用程序和应用服务器的各项性能参数，动态调整流量分配。\n\n    2.6 动态服务器补充(Dynamic Server Act.):当主服务器群中因故障导致数量减少时，动态地将备份服务器补充至主服务器群。\n\n    2.7 服务质量(QoS）:按不同的优先级对数据流进行分配。\n\n    2.8 服务类型(ToS): 按不同的服务类型（在Type of Field中标识）负载均衡对数据流进行分配。\n\n    2.9 规则模式：针对不同的数据流设置导向规则，用户可自行。\n\n    ","slug":"2018-07-15-负载均衡算法","published":true,"updated":"2024-09-02T09:06:11.428Z","_id":"cm0ozs0co001vkgsnd33vf84m","comments":true,"layout":"post","photos":[],"html":"<h2 id=\"本地流量管理技术主要有一下几种负载均衡算法\"><a href=\"#本地流量管理技术主要有一下几种负载均衡算法\" class=\"headerlink\" title=\"本地流量管理技术主要有一下几种负载均衡算法\"></a>本地流量管理技术主要有一下几种负载均衡算法</h2><ol>\n<li><p>静态负载均衡算法包括：轮询，比率，优先权</p>\n<p> 1.1 轮询（Round Robin）：顺序循环将请求一次顺序循环地连接每个服务器。当其中某个服务器发生第二到第7 层的故障，BIG-IP 就把其从顺序循环队列中拿出，不参加下一次的轮询，直到其恢复正常。</p>\n<p> 1.2 比率（Ratio）：给每个服务器分配一个加权值为比例，根椐这个比例，把用户的请求分配到每个服务器。当其中某个服务器发生第二到第7 层的故障，BIG-IP 就把其从服务器队列中拿出，不参加下一次的用户请求的分配, 直到其恢复正常。</p>\n<p> 1.3 优先权（Priority）：给所有服务器分组,给每个组定义优先权，BIG-IP 用户的请求，分配给优先级最高的服务器组（在同一组内，采用轮询或比率算法，分配用户的请求）；当最高优先级中所有服务器出现故障，BIG-IP 才将请求送给次优先级的服务器组。这种方式，实际为用户提供一种热备份的方式。</p>\n</li>\n<li><p>动态负载均衡算法包括: 最少连接数,最快响应速度，观察方法，预测法，动态性能分配，动态服务器补充，服务质量，服务类型，规则模式。</p>\n<p> 2.1 最少的连接方式（Least Connection）：传递新的连接给那些进行最少连接处理的服务器。当其中某个服务器发生第二到第7 层的故障，BIG-IP 就把其从服务器队列中拿出，不参加下一次的用户请求的分配, 直到其恢复正常。</p>\n<p> 2.2 最快模式（Fastest）：传递连接给那些响应最快的服务器。当其中某个服务器发生第二到第7 层的故障，BIG-IP 就把其从服务器队列中拿出，不参加下一次的用户请求的分配，直到其恢复正常。</p>\n<p> 2.3 观察模式（Observed）：连接数目和响应时间以这两项的最佳平衡为依据为新的请求选择服务器。当其中某个服务器发生第二到第7 层的故障，BIG-IP就把其从服务器队列中拿出，不参加下一次的用户请求的分配，直到其恢复正常。</p>\n<p> 2.4 预测模式（Predictive）：BIG-IP利用收集到的服务器当前的性能指标，进行预测分析，选择一台服务器在下一个时间片内，其性能将达到最佳的服务器相应用户的请求。(被BIG-IP 进行检测)</p>\n<p> 2.5 动态性能分配(Dynamic Ratio-APM):BIG-IP 收集到的应用程序和应用服务器的各项性能参数，动态调整流量分配。</p>\n<p> 2.6 动态服务器补充(Dynamic Server Act.):当主服务器群中因故障导致数量减少时，动态地将备份服务器补充至主服务器群。</p>\n<p> 2.7 服务质量(QoS）:按不同的优先级对数据流进行分配。</p>\n<p> 2.8 服务类型(ToS): 按不同的服务类型（在Type of Field中标识）负载均衡对数据流进行分配。</p>\n<p> 2.9 规则模式：针对不同的数据流设置导向规则，用户可自行。</p>\n</li>\n</ol>\n","excerpt":"","more":"<h2 id=\"本地流量管理技术主要有一下几种负载均衡算法\"><a href=\"#本地流量管理技术主要有一下几种负载均衡算法\" class=\"headerlink\" title=\"本地流量管理技术主要有一下几种负载均衡算法\"></a>本地流量管理技术主要有一下几种负载均衡算法</h2><ol>\n<li><p>静态负载均衡算法包括：轮询，比率，优先权</p>\n<p> 1.1 轮询（Round Robin）：顺序循环将请求一次顺序循环地连接每个服务器。当其中某个服务器发生第二到第7 层的故障，BIG-IP 就把其从顺序循环队列中拿出，不参加下一次的轮询，直到其恢复正常。</p>\n<p> 1.2 比率（Ratio）：给每个服务器分配一个加权值为比例，根椐这个比例，把用户的请求分配到每个服务器。当其中某个服务器发生第二到第7 层的故障，BIG-IP 就把其从服务器队列中拿出，不参加下一次的用户请求的分配, 直到其恢复正常。</p>\n<p> 1.3 优先权（Priority）：给所有服务器分组,给每个组定义优先权，BIG-IP 用户的请求，分配给优先级最高的服务器组（在同一组内，采用轮询或比率算法，分配用户的请求）；当最高优先级中所有服务器出现故障，BIG-IP 才将请求送给次优先级的服务器组。这种方式，实际为用户提供一种热备份的方式。</p>\n</li>\n<li><p>动态负载均衡算法包括: 最少连接数,最快响应速度，观察方法，预测法，动态性能分配，动态服务器补充，服务质量，服务类型，规则模式。</p>\n<p> 2.1 最少的连接方式（Least Connection）：传递新的连接给那些进行最少连接处理的服务器。当其中某个服务器发生第二到第7 层的故障，BIG-IP 就把其从服务器队列中拿出，不参加下一次的用户请求的分配, 直到其恢复正常。</p>\n<p> 2.2 最快模式（Fastest）：传递连接给那些响应最快的服务器。当其中某个服务器发生第二到第7 层的故障，BIG-IP 就把其从服务器队列中拿出，不参加下一次的用户请求的分配，直到其恢复正常。</p>\n<p> 2.3 观察模式（Observed）：连接数目和响应时间以这两项的最佳平衡为依据为新的请求选择服务器。当其中某个服务器发生第二到第7 层的故障，BIG-IP就把其从服务器队列中拿出，不参加下一次的用户请求的分配，直到其恢复正常。</p>\n<p> 2.4 预测模式（Predictive）：BIG-IP利用收集到的服务器当前的性能指标，进行预测分析，选择一台服务器在下一个时间片内，其性能将达到最佳的服务器相应用户的请求。(被BIG-IP 进行检测)</p>\n<p> 2.5 动态性能分配(Dynamic Ratio-APM):BIG-IP 收集到的应用程序和应用服务器的各项性能参数，动态调整流量分配。</p>\n<p> 2.6 动态服务器补充(Dynamic Server Act.):当主服务器群中因故障导致数量减少时，动态地将备份服务器补充至主服务器群。</p>\n<p> 2.7 服务质量(QoS）:按不同的优先级对数据流进行分配。</p>\n<p> 2.8 服务类型(ToS): 按不同的服务类型（在Type of Field中标识）负载均衡对数据流进行分配。</p>\n<p> 2.9 规则模式：针对不同的数据流设置导向规则，用户可自行。</p>\n</li>\n</ol>\n","path":"2018/07/15/2018-07-15-负载均衡算法/","permalink":"https://yuekang.org.cn/2018/07/15/2018-07-15-%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%AE%97%E6%B3%95/","tags":[{"name":"负载均衡","_id":"cm0ozs0dd005akgsn7b914lp0","slug":"负载均衡","path":"tags/负载均衡/","permalink":"https://yuekang.org.cn/tags/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/","length":2}],"categories":[],"prev":{"title":"jumperServer","date":"2018-07-22T13:57:11.000Z","slug":"2018-07-22-jumperServer","published":true,"updated":"2024-09-02T09:06:11.428Z","_id":"cm0ozs0co001xkgsn11jyevs7","layout":"post","photos":[],"excerpt":"","path":"2018/07/22/2018-07-22-jumperServer/","permalink":"https://yuekang.org.cn/2018/07/22/2018-07-22-jumperServer/","__post":true},"next":{"title":"proxy 反向代理设置","date":"2018-07-15T14:26:25.000Z","slug":"2018-07-15-proxy-反向代理设置","published":true,"updated":"2024-09-02T09:06:11.427Z","_id":"cm0ozs0cn001ukgsn76550wpf","layout":"post","photos":[],"excerpt":"","path":"2018/07/15/2018-07-15-proxy-反向代理设置/","permalink":"https://yuekang.org.cn/2018/07/15/2018-07-15-proxy-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE/","__post":true},"__post":true}