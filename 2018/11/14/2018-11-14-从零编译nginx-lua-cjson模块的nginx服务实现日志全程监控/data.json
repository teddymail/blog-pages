{"title":"从零编译nginx+lua+cjson模块的nginx服务实现日志全程监控","date":"2018-11-14T04:28:33.000Z","source":"_posts/2018-11-14.从零编译nginx+lua+cjson模块的nginx服务实现日志全程监控_.md","raw":"---\ntitle: 从零编译nginx+lua+cjson模块的nginx服务实现日志全程监控 \ndate: 2018-11-14 12:28:33\ntags: [nginx,监控,lua]\n---\n\n> 我们中有这样的需求就是，当前端和后端通过接口通信以后，我们在日常排查中缺少跟踪接口返回信息和所有头部信息的跟踪，针对于这个需求我们采用nginx+lua+cjson的形式通过lua脚本\n\n## 准备的模块\n\n1. LuaJIT\n\nhttp://luajit.org/download/LuaJIT-2.0.5.tar.gz\n\n2. lua-nginx-module\n\nhttps://github.com/openresty/lua-nginx-module/archive/v0.10.9rc7.tar.gz\n\n3. ngx_devel_kit\n\nhttps://github.com/simpl/ngx_devel_kit/archive/v0.3.0.tar.gz\n\n4. lua-cjson\n\nhttps://www.kyne.com.au/~mark/software/download/lua-cjson-2.1.0.tar.gz\n\n5. nginx\n\nhttp://nginx.org/download/nginx-1.14.1.tar.gz\n\n\n## 软件安装\n\n1. LuaJit安装\n\n```shell\nwget http://luajit.org/download/LuaJIT-2.0.5.tar.gz\n\ntar -zxvf LuaJIT-2.0.5.tar.gz\n\ncd LuaJIT-2.0.5\n\nmake\n\nmake install PREFIX=/usr/local/luajit\n\n# 环境变量必须配置！\nvi /etc/profile\n\n# 加入下面两个环境变量\nexport LUAJIT_LIB=/usr/local/luajit/lib\nexport LUAJIT_INC=/usr/local/luajit/include/luajit-2.0\n\n```\n\n2. ngx_devel_kit和lua-nginx-module\n\n自己选择安装位置，最好公共目录,我放在/usr/local下\n\n```shell\nwget https://github.com/simpl/ngx_devel_kit/archive/v0.3.0.tar.gz\n\nwget https://github.com/openresty/lua-nginx-module/archive/v0.10.9rc7.tar.gz\n\ntar -zxvf v0.3.0.tar.gz\n\ntar -zxvf v0.10.9rc7.tar.gz\n\ncp -R lua-nginx-module/ /usr/local/\ncp -R ngx_devel_kit/ /usr/local/\n```\n\n3. 安装nginx编译nginx\n\n```shell\n\nwget http://nginx.org/download/nginx-1.14.1.tar.gz\n\ntar -zxvf nginx-1.14.1.tar.gz\n\ncd nginx-1.14.1\n\n# 注：报错gcc需要安装，可以执行\n\nyum install -y gcc g++ gcc-c++\n\n#依赖报错，可以执行\n\nyum -y install zlib zlib-devel openssl openssl--devel pcre pcre-devel\n\n./configure --with-ld-opt=\"-Wl,-rpath,$LUAJIT_LIB\" --conf-path=/etc/nginx/nginx.conf  --add-module=/usr/local/ngx_devel_kit --add-module=/usr/local/lua-nginx-module\n\nmake -j 4 && make install\n\n# 加载lua库\necho \"/usr/local/luajit/lib\" >> /etc/ld.so.conf\nldconfig\n```\n\n\n4. lua-cjson安装\n\n```\n\nwget https://www.kyne.com.au/~mark/software/download/lua-cjson-2.1.0.tar.gz\n\ntar zxvf lua-cjson-2.1.0.tar.gz\n\ncd lua-cjson-2.1.0\n\nvi Makefile\n\n# 修改\b前缀(路径后不要留空格！！)\nPREFIX =            /usr/local/luajit\nLUA_INCLUDE_DIR =   $(PREFIX)/include/luajit-2.0\n\nmake install\n\n# lua中引用cjson库时必须指定位置\npackage.path = \"/usr/local/luajit/mylua/?.lua;\"\npackage.cpath = \"/usr/local/luajit/lib/lua/5.1/?.so;\"\nlocal cjson = require(\"cjson\");\n```\n\n\n## 网站配置\n\n日志手机依旧依靠nginx log的形式我们针对于需要的内容进行收集和填充到日志中去，依赖原有的阿里云日志服务进行收集\n\n![日志服务](http://img.yuekang.org.cn/2018112101.png)\n\n1. 定义日志格式\n\n```\n log_format json_combined escape=json\n                 '{'\n                     '\"time_local\":\"$time_local\",'\n                     '\"remote_addr\":\"$remote_addr\",'\n                     '\"remote_user\":\"$remote_user\",'\n                     '\"request\":\"$request\",'\n                     '\"req_headers\":\"$req_headers\",'\n                     '\"status\": \"$status\",'\n                     '\"http_host\": \"$http_host\",'\n                     '\"body_bytes_sent\":\"$body_bytes_sent\",'\n                     '\"request_time\":\"$request_time\",'\n                     '\"http_referrer\":\"$http_referer\",'\n                     '\"content_type\":\"$content_type\",'\n                     '\"req_body\":\"$req_body\",'\n                     '\"resp_body\":\"$resp_body\",'\n                     '\"ua\":\"$http_user_agent\",'\n                     '\"cookie_u\":\"$cookie_u\",'\n                     '\"referer\":\"$http_referer\",'\n                     '\"xff\":\"$http_x_forwarded_for\",'\n                     '\"ups_status\":\"$upstream_status\",'\n                     '\"ups_addr\":\"$upstream_addr\",'\n                     '\"resp_content_type\":\"$resp_content_type\",'\n                     '\"ups_time\":\"$upstream_response_time\"'\n                 '}';\n```\n\n2. 定义req_header和resp_body收集\n\n```\n# 开启lua记录请求体\nlua_need_request_body on;\nset $resp_body \"\";\nset $resp_content_type \"\";\nset $req_body \"\";\nset $req_headers \"\";\nheader_filter_by_lua '\n             package.path = \"/usr/local/luajit/mylua/?.lua;\"\n             package.cpath = \"/usr/local/luajit/lib/lua/5.1/?.so;\"\n             local cjson = require(\"cjson\");\n             local headers, err = ngx.req.get_headers()\n             local json = {};\n             for k, v in pairs(headers) do\n                 json[k] = v;\n             end\n             ngx.var.req_headers = cjson.encode(json);\n';\nbody_filter_by_lua '\n             ngx.var.resp_content_type = ngx.resp.get_headers()[\"Content-Type\"]\n             local resp_body = ngx.arg[1]\n             ngx.ctx.buffered = (ngx.ctx.buffered or \"\") .. resp_body\n             if ngx.arg[2] and string.find(ngx.var.resp_content_type, \"application/json\") then\n                     ngx.var.resp_body = ngx.ctx.buffered\n                     ngx.var.req_body = ngx.var.request_body\n             end\n';\n\n```\n3. odps收集表结构\n\n```\nCREATE TABLE `access_json` (\n\t`ip` string,\n\t`remote_user` string,\n\t`req_headers` string,\n\t`status` bigint,\n\t`http_host` string,\n\t`body_bytes_sent` bigint,\n\t`request_time` string,\n\t`http_referer` string,\n\t`content_type` string,\n\t`req_body` string,\n\t`resp_body` string,\n\t`http_user_agent` string,\n\t`cookie_u` string,\n\t`http_x_forwarded_for` string,\n\t`upstream_status` string,\n\t`upstream_addr` string,\n\t`resp_content_type` string,\n\t`upstream_response_time` string,\n\t`request` string\n) \n PARTITIONED BY (dt string);\n```\n\n\n\n## AB压力测试\n\n```\n yum -y install httpd-tools\n[root@zookeeperslave2 ~]# ab -c 1000 -n 10000 -r  http://192.168.1.169/aaa\nThis is ApacheBench, Version 2.3 <$Revision: 1430300 $>\nCopyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\nLicensed to The Apache Software Foundation, http://www.apache.org/\n\nBenchmarking 192.168.1.169 (be patient)\nCompleted 1000 requests\nCompleted 2000 requests\nCompleted 3000 requests\nCompleted 4000 requests\nCompleted 5000 requests\nCompleted 6000 requests\nCompleted 7000 requests\nCompleted 8000 requests\nCompleted 9000 requests\nCompleted 10000 requests\nFinished 10000 requests\n\n\nServer Software:        nginx/1.14.1\nServer Hostname:        192.168.1.169\nServer Port:            80\n\nDocument Path:          /aaa\nDocument Length:        17 bytes\n\nConcurrency Level:      1000\nTime taken for tests:   1.508 seconds\nComplete requests:      10000\nFailed requests:        0\nWrite errors:           0\nTotal transferred:      1660000 bytes\nHTML transferred:       170000 bytes\nRequests per second:    6632.41 [#/sec] (mean)\nTime per request:       150.775 [ms] (mean)\nTime per request:       0.151 [ms] (mean, across all concurrent requests)\nTransfer rate:          1075.18 [Kbytes/sec] received\n\nConnection Times (ms)\n              min  mean[+/-sd] median   max\nConnect:        0   52 169.9     18    1040\nProcessing:    11   50  29.4     41     273\nWaiting:        0   48  29.3     39     270\nTotal:         30  102 171.4     65    1292\n\nPercentage of the requests served within a certain time (ms)\n  50%     65\n  66%     73\n  75%     82\n  80%     90\n  90%    150\n  95%    156\n  98%   1059\n  99%   1065\n 100%   1292 (longest request)\n\n```\n\n\n\n## 问题集结\n\n1. AIO找不到的问题\n\n```\n./configure: no supported file AIO was found\nCurrently file AIO is supported on FreeBSD 4.3+ and Linux 2.6.22+ only\n```\n\n安装开发者工具\n\n```\nyum groupinstall 'Development Tools'\n```\n\n2. 缺少libxml2/libxslt模块\n\n```\n./configure: error: the HTTP XSLT module requires the libxml2/libxslt\nlibraries. You can either do not enable the module or install the libraries.\n```\n\n安装\b缺失库\n\n```\nyum -y install libxml2 libxml2-dev\nyum -y install libxslt-devel\n```\n\n3. 缺少GD库\n\n\n```\n./configure: error: the HTTP image filter module requires the GD library.\nYou can either do not enable the module or install the libraries.\n```\n\n安装GD库\n\n```\nyum -y install gd-devel\n```\n\n4. 缺少ExtUtils\n\n```\n./configure: error: perl module ExtUtils::Embed is required\n```\n\n安装ExtUtils\n\n```\nyum -y install perl-devel perl-ExtUtils-Embed\n```\n\n5. 缺少GeoIP库\n\n```\n./configure: error: the GeoIP module requires the GeoIP library.\nYou can either do not enable the module or install the library.\n```\n\n安装缺失库\n\n```\nyum -y install GeoIP GeoIP-devel GeoIP-data\n```\n\n6、 缺少Google Perftools （编译环境我是不装这个的，从编译选线去除这个依赖就行）\n\n```\n./configure: error: the Google perftools module requires the Google perftools\nlibrary. You can either do not enable the module or install the library.\n```\n\n```\n# 安装libunwind\nwget http://download.savannah.gnu.org/releases/libunwind/libunwind-0.99-beta.tar.gz\n\ntar zxvf libunwind-0.99-beta.tar.gz\ncd libunwind-0.99-beta\n./configure\nmake\nmake install\n\n# 安装google-perftools\nwget https://github.com/gperftools/gperftools/releases/download/gperftools-2.5/gperftools-2.5.tar.gz\n\ntar zxvf gperftools-2.5.tar.gz\ncd gperftools-2.5\n./configure --prefix=/usr/local/gperftools\nmake && make install\nvi /etc/ld.so.conf.d/usr_local_lib.conf\n#加入\n/usr/local/lib\nldconfig\n\n# 添加环境\nvi /etc/profile\nexport LD_PRELOAD=/usr/local/gperftools/lib/libtcmalloc.so\nexport HEAPPROFILE=/usr/bin/gzip\n\n```\n\n8.模块版本不对 \n\n```\n[emerg] module \"/usr/lib64/nginx/modules/ngx_http_geoip_module.so\" version 1012002 instead of 1...ip.conf:1\n```\n\n这个错误是因为之前nginx是yum安装的他的版本是1.12.*的  我这次安装的nginx是最新版本1.14.*的所以我需要对这个模块进行升级\n\n```\nvi /etc/yum.repos.d/nginx.repo\n\n[nginx]\nname=nginx repo\nbaseurl=http://nginx.org/packages/centos/7/$basearch/\ngpgcheck=0\nenabled=1\n\nyum remove nginx-mod*\nyum install nginx-module-*\n\n```\n\n","slug":"2018-11-14-从零编译nginx-lua-cjson模块的nginx服务实现日志全程监控","published":true,"updated":"2024-09-02T09:06:11.431Z","_id":"cm0oplawq002huysn2fde2nzt","comments":true,"layout":"post","photos":[],"html":"<blockquote>\n<p>我们中有这样的需求就是，当前端和后端通过接口通信以后，我们在日常排查中缺少跟踪接口返回信息和所有头部信息的跟踪，针对于这个需求我们采用nginx+lua+cjson的形式通过lua脚本</p>\n</blockquote>\n<h2 id=\"准备的模块\"><a href=\"#准备的模块\" class=\"headerlink\" title=\"准备的模块\"></a>准备的模块</h2><ol>\n<li>LuaJIT</li>\n</ol>\n<p><a href=\"http://luajit.org/download/LuaJIT-2.0.5.tar.gz\">http://luajit.org/download/LuaJIT-2.0.5.tar.gz</a></p>\n<ol start=\"2\">\n<li>lua-nginx-module</li>\n</ol>\n<p><a href=\"https://github.com/openresty/lua-nginx-module/archive/v0.10.9rc7.tar.gz\">https://github.com/openresty/lua-nginx-module/archive/v0.10.9rc7.tar.gz</a></p>\n<ol start=\"3\">\n<li>ngx_devel_kit</li>\n</ol>\n<p><a href=\"https://github.com/simpl/ngx_devel_kit/archive/v0.3.0.tar.gz\">https://github.com/simpl/ngx_devel_kit/archive/v0.3.0.tar.gz</a></p>\n<ol start=\"4\">\n<li>lua-cjson</li>\n</ol>\n<p><a href=\"https://www.kyne.com.au/~mark/software/download/lua-cjson-2.1.0.tar.gz\">https://www.kyne.com.au/~mark/software/download/lua-cjson-2.1.0.tar.gz</a></p>\n<ol start=\"5\">\n<li>nginx</li>\n</ol>\n<p><a href=\"http://nginx.org/download/nginx-1.14.1.tar.gz\">http://nginx.org/download/nginx-1.14.1.tar.gz</a></p>\n<h2 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h2><ol>\n<li>LuaJit安装</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget http://luajit.org/download/LuaJIT-2.0.5.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar -zxvf LuaJIT-2.0.5.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">cd LuaJIT-2.0.5</span><br><span class=\"line\"></span><br><span class=\"line\">make</span><br><span class=\"line\"></span><br><span class=\"line\">make install PREFIX=/usr/local/luajit</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">环境变量必须配置！</span></span><br><span class=\"line\">vi /etc/profile</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">加入下面两个环境变量</span></span><br><span class=\"line\">export LUAJIT_LIB=/usr/local/luajit/lib</span><br><span class=\"line\">export LUAJIT_INC=/usr/local/luajit/include/luajit-2.0</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>ngx_devel_kit和lua-nginx-module</li>\n</ol>\n<p>自己选择安装位置，最好公共目录,我放在&#x2F;usr&#x2F;local下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget https://github.com/simpl/ngx_devel_kit/archive/v0.3.0.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">wget https://github.com/openresty/lua-nginx-module/archive/v0.10.9rc7.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar -zxvf v0.3.0.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar -zxvf v0.10.9rc7.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">cp -R lua-nginx-module/ /usr/local/</span><br><span class=\"line\">cp -R ngx_devel_kit/ /usr/local/</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>安装nginx编译nginx</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">wget http://nginx.org/download/nginx-1.14.1.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar -zxvf nginx-1.14.1.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">cd nginx-1.14.1</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">注：报错gcc需要安装，可以执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">yum install -y gcc g++ gcc-c++</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">依赖报错，可以执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">yum -y install zlib zlib-devel openssl openssl--devel pcre pcre-devel</span><br><span class=\"line\"></span><br><span class=\"line\">./configure --with-ld-opt=&quot;-Wl,-rpath,$LUAJIT_LIB&quot; --conf-path=/etc/nginx/nginx.conf  --add-module=/usr/local/ngx_devel_kit --add-module=/usr/local/lua-nginx-module</span><br><span class=\"line\"></span><br><span class=\"line\">make -j 4 &amp;&amp; make install</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">加载lua库</span></span><br><span class=\"line\">echo &quot;/usr/local/luajit/lib&quot; &gt;&gt; /etc/ld.so.conf</span><br><span class=\"line\">ldconfig</span><br></pre></td></tr></table></figure>\n\n\n<ol start=\"4\">\n<li>lua-cjson安装</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">wget https://www.kyne.com.au/~mark/software/download/lua-cjson-2.1.0.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar zxvf lua-cjson-2.1.0.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">cd lua-cjson-2.1.0</span><br><span class=\"line\"></span><br><span class=\"line\">vi Makefile</span><br><span class=\"line\"></span><br><span class=\"line\"># 修改\b前缀(路径后不要留空格！！)</span><br><span class=\"line\">PREFIX =            /usr/local/luajit</span><br><span class=\"line\">LUA_INCLUDE_DIR =   $(PREFIX)/include/luajit-2.0</span><br><span class=\"line\"></span><br><span class=\"line\">make install</span><br><span class=\"line\"></span><br><span class=\"line\"># lua中引用cjson库时必须指定位置</span><br><span class=\"line\">package.path = &quot;/usr/local/luajit/mylua/?.lua;&quot;</span><br><span class=\"line\">package.cpath = &quot;/usr/local/luajit/lib/lua/5.1/?.so;&quot;</span><br><span class=\"line\">local cjson = require(&quot;cjson&quot;);</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"网站配置\"><a href=\"#网站配置\" class=\"headerlink\" title=\"网站配置\"></a>网站配置</h2><p>日志手机依旧依靠nginx log的形式我们针对于需要的内容进行收集和填充到日志中去，依赖原有的阿里云日志服务进行收集</p>\n<p><img src=\"http://img.yuekang.org.cn/2018112101.png\" alt=\"日志服务\"></p>\n<ol>\n<li>定义日志格式</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">log_format json_combined escape=json</span><br><span class=\"line\">                &#x27;&#123;&#x27;</span><br><span class=\"line\">                    &#x27;&quot;time_local&quot;:&quot;$time_local&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;remote_addr&quot;:&quot;$remote_addr&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;remote_user&quot;:&quot;$remote_user&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;request&quot;:&quot;$request&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;req_headers&quot;:&quot;$req_headers&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;status&quot;: &quot;$status&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;http_host&quot;: &quot;$http_host&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;body_bytes_sent&quot;:&quot;$body_bytes_sent&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;request_time&quot;:&quot;$request_time&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;http_referrer&quot;:&quot;$http_referer&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;content_type&quot;:&quot;$content_type&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;req_body&quot;:&quot;$req_body&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;resp_body&quot;:&quot;$resp_body&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;ua&quot;:&quot;$http_user_agent&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;cookie_u&quot;:&quot;$cookie_u&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;referer&quot;:&quot;$http_referer&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;xff&quot;:&quot;$http_x_forwarded_for&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;ups_status&quot;:&quot;$upstream_status&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;ups_addr&quot;:&quot;$upstream_addr&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;resp_content_type&quot;:&quot;$resp_content_type&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;ups_time&quot;:&quot;$upstream_response_time&quot;&#x27;</span><br><span class=\"line\">                &#x27;&#125;&#x27;;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>定义req_header和resp_body收集</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 开启lua记录请求体</span><br><span class=\"line\">lua_need_request_body on;</span><br><span class=\"line\">set $resp_body &quot;&quot;;</span><br><span class=\"line\">set $resp_content_type &quot;&quot;;</span><br><span class=\"line\">set $req_body &quot;&quot;;</span><br><span class=\"line\">set $req_headers &quot;&quot;;</span><br><span class=\"line\">header_filter_by_lua &#x27;</span><br><span class=\"line\">             package.path = &quot;/usr/local/luajit/mylua/?.lua;&quot;</span><br><span class=\"line\">             package.cpath = &quot;/usr/local/luajit/lib/lua/5.1/?.so;&quot;</span><br><span class=\"line\">             local cjson = require(&quot;cjson&quot;);</span><br><span class=\"line\">             local headers, err = ngx.req.get_headers()</span><br><span class=\"line\">             local json = &#123;&#125;;</span><br><span class=\"line\">             for k, v in pairs(headers) do</span><br><span class=\"line\">                 json[k] = v;</span><br><span class=\"line\">             end</span><br><span class=\"line\">             ngx.var.req_headers = cjson.encode(json);</span><br><span class=\"line\">&#x27;;</span><br><span class=\"line\">body_filter_by_lua &#x27;</span><br><span class=\"line\">             ngx.var.resp_content_type = ngx.resp.get_headers()[&quot;Content-Type&quot;]</span><br><span class=\"line\">             local resp_body = ngx.arg[1]</span><br><span class=\"line\">             ngx.ctx.buffered = (ngx.ctx.buffered or &quot;&quot;) .. resp_body</span><br><span class=\"line\">             if ngx.arg[2] and string.find(ngx.var.resp_content_type, &quot;application/json&quot;) then</span><br><span class=\"line\">                     ngx.var.resp_body = ngx.ctx.buffered</span><br><span class=\"line\">                     ngx.var.req_body = ngx.var.request_body</span><br><span class=\"line\">             end</span><br><span class=\"line\">&#x27;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>odps收集表结构</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">CREATE TABLE `access_json` (</span><br><span class=\"line\">\t`ip` string,</span><br><span class=\"line\">\t`remote_user` string,</span><br><span class=\"line\">\t`req_headers` string,</span><br><span class=\"line\">\t`status` bigint,</span><br><span class=\"line\">\t`http_host` string,</span><br><span class=\"line\">\t`body_bytes_sent` bigint,</span><br><span class=\"line\">\t`request_time` string,</span><br><span class=\"line\">\t`http_referer` string,</span><br><span class=\"line\">\t`content_type` string,</span><br><span class=\"line\">\t`req_body` string,</span><br><span class=\"line\">\t`resp_body` string,</span><br><span class=\"line\">\t`http_user_agent` string,</span><br><span class=\"line\">\t`cookie_u` string,</span><br><span class=\"line\">\t`http_x_forwarded_for` string,</span><br><span class=\"line\">\t`upstream_status` string,</span><br><span class=\"line\">\t`upstream_addr` string,</span><br><span class=\"line\">\t`resp_content_type` string,</span><br><span class=\"line\">\t`upstream_response_time` string,</span><br><span class=\"line\">\t`request` string</span><br><span class=\"line\">) </span><br><span class=\"line\"> PARTITIONED BY (dt string);</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"AB压力测试\"><a href=\"#AB压力测试\" class=\"headerlink\" title=\"AB压力测试\"></a>AB压力测试</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"> yum -y install httpd-tools</span><br><span class=\"line\">[root@zookeeperslave2 ~]# ab -c 1000 -n 10000 -r  http://192.168.1.169/aaa</span><br><span class=\"line\">This is ApacheBench, Version 2.3 &lt;$Revision: 1430300 $&gt;</span><br><span class=\"line\">Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/</span><br><span class=\"line\">Licensed to The Apache Software Foundation, http://www.apache.org/</span><br><span class=\"line\"></span><br><span class=\"line\">Benchmarking 192.168.1.169 (be patient)</span><br><span class=\"line\">Completed 1000 requests</span><br><span class=\"line\">Completed 2000 requests</span><br><span class=\"line\">Completed 3000 requests</span><br><span class=\"line\">Completed 4000 requests</span><br><span class=\"line\">Completed 5000 requests</span><br><span class=\"line\">Completed 6000 requests</span><br><span class=\"line\">Completed 7000 requests</span><br><span class=\"line\">Completed 8000 requests</span><br><span class=\"line\">Completed 9000 requests</span><br><span class=\"line\">Completed 10000 requests</span><br><span class=\"line\">Finished 10000 requests</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Server Software:        nginx/1.14.1</span><br><span class=\"line\">Server Hostname:        192.168.1.169</span><br><span class=\"line\">Server Port:            80</span><br><span class=\"line\"></span><br><span class=\"line\">Document Path:          /aaa</span><br><span class=\"line\">Document Length:        17 bytes</span><br><span class=\"line\"></span><br><span class=\"line\">Concurrency Level:      1000</span><br><span class=\"line\">Time taken for tests:   1.508 seconds</span><br><span class=\"line\">Complete requests:      10000</span><br><span class=\"line\">Failed requests:        0</span><br><span class=\"line\">Write errors:           0</span><br><span class=\"line\">Total transferred:      1660000 bytes</span><br><span class=\"line\">HTML transferred:       170000 bytes</span><br><span class=\"line\">Requests per second:    6632.41 [#/sec] (mean)</span><br><span class=\"line\">Time per request:       150.775 [ms] (mean)</span><br><span class=\"line\">Time per request:       0.151 [ms] (mean, across all concurrent requests)</span><br><span class=\"line\">Transfer rate:          1075.18 [Kbytes/sec] received</span><br><span class=\"line\"></span><br><span class=\"line\">Connection Times (ms)</span><br><span class=\"line\">              min  mean[+/-sd] median   max</span><br><span class=\"line\">Connect:        0   52 169.9     18    1040</span><br><span class=\"line\">Processing:    11   50  29.4     41     273</span><br><span class=\"line\">Waiting:        0   48  29.3     39     270</span><br><span class=\"line\">Total:         30  102 171.4     65    1292</span><br><span class=\"line\"></span><br><span class=\"line\">Percentage of the requests served within a certain time (ms)</span><br><span class=\"line\">  50%     65</span><br><span class=\"line\">  66%     73</span><br><span class=\"line\">  75%     82</span><br><span class=\"line\">  80%     90</span><br><span class=\"line\">  90%    150</span><br><span class=\"line\">  95%    156</span><br><span class=\"line\">  98%   1059</span><br><span class=\"line\">  99%   1065</span><br><span class=\"line\"> 100%   1292 (longest request)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"问题集结\"><a href=\"#问题集结\" class=\"headerlink\" title=\"问题集结\"></a>问题集结</h2><ol>\n<li>AIO找不到的问题</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">./configure: no supported file AIO was found</span><br><span class=\"line\">Currently file AIO is supported on FreeBSD 4.3+ and Linux 2.6.22+ only</span><br></pre></td></tr></table></figure>\n\n<p>安装开发者工具</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">yum groupinstall &#x27;Development Tools&#x27;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>缺少libxml2&#x2F;libxslt模块</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">./configure: error: the HTTP XSLT module requires the libxml2/libxslt</span><br><span class=\"line\">libraries. You can either do not enable the module or install the libraries.</span><br></pre></td></tr></table></figure>\n\n<p>安装\b缺失库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">yum -y install libxml2 libxml2-dev</span><br><span class=\"line\">yum -y install libxslt-devel</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>缺少GD库</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">./configure: error: the HTTP image filter module requires the GD library.</span><br><span class=\"line\">You can either do not enable the module or install the libraries.</span><br></pre></td></tr></table></figure>\n\n<p>安装GD库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">yum -y install gd-devel</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>缺少ExtUtils</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">./configure: error: perl module ExtUtils::Embed is required</span><br></pre></td></tr></table></figure>\n\n<p>安装ExtUtils</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">yum -y install perl-devel perl-ExtUtils-Embed</span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>缺少GeoIP库</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">./configure: error: the GeoIP module requires the GeoIP library.</span><br><span class=\"line\">You can either do not enable the module or install the library.</span><br></pre></td></tr></table></figure>\n\n<p>安装缺失库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">yum -y install GeoIP GeoIP-devel GeoIP-data</span><br></pre></td></tr></table></figure>\n\n<p>6、 缺少Google Perftools （编译环境我是不装这个的，从编译选线去除这个依赖就行）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">./configure: error: the Google perftools module requires the Google perftools</span><br><span class=\"line\">library. You can either do not enable the module or install the library.</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 安装libunwind</span><br><span class=\"line\">wget http://download.savannah.gnu.org/releases/libunwind/libunwind-0.99-beta.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar zxvf libunwind-0.99-beta.tar.gz</span><br><span class=\"line\">cd libunwind-0.99-beta</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装google-perftools</span><br><span class=\"line\">wget https://github.com/gperftools/gperftools/releases/download/gperftools-2.5/gperftools-2.5.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar zxvf gperftools-2.5.tar.gz</span><br><span class=\"line\">cd gperftools-2.5</span><br><span class=\"line\">./configure --prefix=/usr/local/gperftools</span><br><span class=\"line\">make &amp;&amp; make install</span><br><span class=\"line\">vi /etc/ld.so.conf.d/usr_local_lib.conf</span><br><span class=\"line\">#加入</span><br><span class=\"line\">/usr/local/lib</span><br><span class=\"line\">ldconfig</span><br><span class=\"line\"></span><br><span class=\"line\"># 添加环境</span><br><span class=\"line\">vi /etc/profile</span><br><span class=\"line\">export LD_PRELOAD=/usr/local/gperftools/lib/libtcmalloc.so</span><br><span class=\"line\">export HEAPPROFILE=/usr/bin/gzip</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>8.模块版本不对 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">[emerg] module &quot;/usr/lib64/nginx/modules/ngx_http_geoip_module.so&quot; version 1012002 instead of 1...ip.conf:1</span><br></pre></td></tr></table></figure>\n\n<p>这个错误是因为之前nginx是yum安装的他的版本是1.12.*的  我这次安装的nginx是最新版本1.14.*的所以我需要对这个模块进行升级</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">vi /etc/yum.repos.d/nginx.repo</span><br><span class=\"line\"></span><br><span class=\"line\">[nginx]</span><br><span class=\"line\">name=nginx repo</span><br><span class=\"line\">baseurl=http://nginx.org/packages/centos/7/$basearch/</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\">enabled=1</span><br><span class=\"line\"></span><br><span class=\"line\">yum remove nginx-mod*</span><br><span class=\"line\">yum install nginx-module-*</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","excerpt":"","more":"<blockquote>\n<p>我们中有这样的需求就是，当前端和后端通过接口通信以后，我们在日常排查中缺少跟踪接口返回信息和所有头部信息的跟踪，针对于这个需求我们采用nginx+lua+cjson的形式通过lua脚本</p>\n</blockquote>\n<h2 id=\"准备的模块\"><a href=\"#准备的模块\" class=\"headerlink\" title=\"准备的模块\"></a>准备的模块</h2><ol>\n<li>LuaJIT</li>\n</ol>\n<p><a href=\"http://luajit.org/download/LuaJIT-2.0.5.tar.gz\">http://luajit.org/download/LuaJIT-2.0.5.tar.gz</a></p>\n<ol start=\"2\">\n<li>lua-nginx-module</li>\n</ol>\n<p><a href=\"https://github.com/openresty/lua-nginx-module/archive/v0.10.9rc7.tar.gz\">https://github.com/openresty/lua-nginx-module/archive/v0.10.9rc7.tar.gz</a></p>\n<ol start=\"3\">\n<li>ngx_devel_kit</li>\n</ol>\n<p><a href=\"https://github.com/simpl/ngx_devel_kit/archive/v0.3.0.tar.gz\">https://github.com/simpl/ngx_devel_kit/archive/v0.3.0.tar.gz</a></p>\n<ol start=\"4\">\n<li>lua-cjson</li>\n</ol>\n<p><a href=\"https://www.kyne.com.au/~mark/software/download/lua-cjson-2.1.0.tar.gz\">https://www.kyne.com.au/~mark/software/download/lua-cjson-2.1.0.tar.gz</a></p>\n<ol start=\"5\">\n<li>nginx</li>\n</ol>\n<p><a href=\"http://nginx.org/download/nginx-1.14.1.tar.gz\">http://nginx.org/download/nginx-1.14.1.tar.gz</a></p>\n<h2 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h2><ol>\n<li>LuaJit安装</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget http://luajit.org/download/LuaJIT-2.0.5.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar -zxvf LuaJIT-2.0.5.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">cd LuaJIT-2.0.5</span><br><span class=\"line\"></span><br><span class=\"line\">make</span><br><span class=\"line\"></span><br><span class=\"line\">make install PREFIX=/usr/local/luajit</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">环境变量必须配置！</span></span><br><span class=\"line\">vi /etc/profile</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">加入下面两个环境变量</span></span><br><span class=\"line\">export LUAJIT_LIB=/usr/local/luajit/lib</span><br><span class=\"line\">export LUAJIT_INC=/usr/local/luajit/include/luajit-2.0</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>ngx_devel_kit和lua-nginx-module</li>\n</ol>\n<p>自己选择安装位置，最好公共目录,我放在&#x2F;usr&#x2F;local下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">wget https://github.com/simpl/ngx_devel_kit/archive/v0.3.0.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">wget https://github.com/openresty/lua-nginx-module/archive/v0.10.9rc7.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar -zxvf v0.3.0.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar -zxvf v0.10.9rc7.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">cp -R lua-nginx-module/ /usr/local/</span><br><span class=\"line\">cp -R ngx_devel_kit/ /usr/local/</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>安装nginx编译nginx</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">wget http://nginx.org/download/nginx-1.14.1.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar -zxvf nginx-1.14.1.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">cd nginx-1.14.1</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">注：报错gcc需要安装，可以执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">yum install -y gcc g++ gcc-c++</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">依赖报错，可以执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">yum -y install zlib zlib-devel openssl openssl--devel pcre pcre-devel</span><br><span class=\"line\"></span><br><span class=\"line\">./configure --with-ld-opt=&quot;-Wl,-rpath,$LUAJIT_LIB&quot; --conf-path=/etc/nginx/nginx.conf  --add-module=/usr/local/ngx_devel_kit --add-module=/usr/local/lua-nginx-module</span><br><span class=\"line\"></span><br><span class=\"line\">make -j 4 &amp;&amp; make install</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">加载lua库</span></span><br><span class=\"line\">echo &quot;/usr/local/luajit/lib&quot; &gt;&gt; /etc/ld.so.conf</span><br><span class=\"line\">ldconfig</span><br></pre></td></tr></table></figure>\n\n\n<ol start=\"4\">\n<li>lua-cjson安装</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">wget https://www.kyne.com.au/~mark/software/download/lua-cjson-2.1.0.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar zxvf lua-cjson-2.1.0.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">cd lua-cjson-2.1.0</span><br><span class=\"line\"></span><br><span class=\"line\">vi Makefile</span><br><span class=\"line\"></span><br><span class=\"line\"># 修改\b前缀(路径后不要留空格！！)</span><br><span class=\"line\">PREFIX =            /usr/local/luajit</span><br><span class=\"line\">LUA_INCLUDE_DIR =   $(PREFIX)/include/luajit-2.0</span><br><span class=\"line\"></span><br><span class=\"line\">make install</span><br><span class=\"line\"></span><br><span class=\"line\"># lua中引用cjson库时必须指定位置</span><br><span class=\"line\">package.path = &quot;/usr/local/luajit/mylua/?.lua;&quot;</span><br><span class=\"line\">package.cpath = &quot;/usr/local/luajit/lib/lua/5.1/?.so;&quot;</span><br><span class=\"line\">local cjson = require(&quot;cjson&quot;);</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"网站配置\"><a href=\"#网站配置\" class=\"headerlink\" title=\"网站配置\"></a>网站配置</h2><p>日志手机依旧依靠nginx log的形式我们针对于需要的内容进行收集和填充到日志中去，依赖原有的阿里云日志服务进行收集</p>\n<p><img src=\"http://img.yuekang.org.cn/2018112101.png\" alt=\"日志服务\"></p>\n<ol>\n<li>定义日志格式</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">log_format json_combined escape=json</span><br><span class=\"line\">                &#x27;&#123;&#x27;</span><br><span class=\"line\">                    &#x27;&quot;time_local&quot;:&quot;$time_local&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;remote_addr&quot;:&quot;$remote_addr&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;remote_user&quot;:&quot;$remote_user&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;request&quot;:&quot;$request&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;req_headers&quot;:&quot;$req_headers&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;status&quot;: &quot;$status&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;http_host&quot;: &quot;$http_host&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;body_bytes_sent&quot;:&quot;$body_bytes_sent&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;request_time&quot;:&quot;$request_time&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;http_referrer&quot;:&quot;$http_referer&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;content_type&quot;:&quot;$content_type&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;req_body&quot;:&quot;$req_body&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;resp_body&quot;:&quot;$resp_body&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;ua&quot;:&quot;$http_user_agent&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;cookie_u&quot;:&quot;$cookie_u&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;referer&quot;:&quot;$http_referer&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;xff&quot;:&quot;$http_x_forwarded_for&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;ups_status&quot;:&quot;$upstream_status&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;ups_addr&quot;:&quot;$upstream_addr&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;resp_content_type&quot;:&quot;$resp_content_type&quot;,&#x27;</span><br><span class=\"line\">                    &#x27;&quot;ups_time&quot;:&quot;$upstream_response_time&quot;&#x27;</span><br><span class=\"line\">                &#x27;&#125;&#x27;;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>定义req_header和resp_body收集</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 开启lua记录请求体</span><br><span class=\"line\">lua_need_request_body on;</span><br><span class=\"line\">set $resp_body &quot;&quot;;</span><br><span class=\"line\">set $resp_content_type &quot;&quot;;</span><br><span class=\"line\">set $req_body &quot;&quot;;</span><br><span class=\"line\">set $req_headers &quot;&quot;;</span><br><span class=\"line\">header_filter_by_lua &#x27;</span><br><span class=\"line\">             package.path = &quot;/usr/local/luajit/mylua/?.lua;&quot;</span><br><span class=\"line\">             package.cpath = &quot;/usr/local/luajit/lib/lua/5.1/?.so;&quot;</span><br><span class=\"line\">             local cjson = require(&quot;cjson&quot;);</span><br><span class=\"line\">             local headers, err = ngx.req.get_headers()</span><br><span class=\"line\">             local json = &#123;&#125;;</span><br><span class=\"line\">             for k, v in pairs(headers) do</span><br><span class=\"line\">                 json[k] = v;</span><br><span class=\"line\">             end</span><br><span class=\"line\">             ngx.var.req_headers = cjson.encode(json);</span><br><span class=\"line\">&#x27;;</span><br><span class=\"line\">body_filter_by_lua &#x27;</span><br><span class=\"line\">             ngx.var.resp_content_type = ngx.resp.get_headers()[&quot;Content-Type&quot;]</span><br><span class=\"line\">             local resp_body = ngx.arg[1]</span><br><span class=\"line\">             ngx.ctx.buffered = (ngx.ctx.buffered or &quot;&quot;) .. resp_body</span><br><span class=\"line\">             if ngx.arg[2] and string.find(ngx.var.resp_content_type, &quot;application/json&quot;) then</span><br><span class=\"line\">                     ngx.var.resp_body = ngx.ctx.buffered</span><br><span class=\"line\">                     ngx.var.req_body = ngx.var.request_body</span><br><span class=\"line\">             end</span><br><span class=\"line\">&#x27;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>odps收集表结构</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">CREATE TABLE `access_json` (</span><br><span class=\"line\">\t`ip` string,</span><br><span class=\"line\">\t`remote_user` string,</span><br><span class=\"line\">\t`req_headers` string,</span><br><span class=\"line\">\t`status` bigint,</span><br><span class=\"line\">\t`http_host` string,</span><br><span class=\"line\">\t`body_bytes_sent` bigint,</span><br><span class=\"line\">\t`request_time` string,</span><br><span class=\"line\">\t`http_referer` string,</span><br><span class=\"line\">\t`content_type` string,</span><br><span class=\"line\">\t`req_body` string,</span><br><span class=\"line\">\t`resp_body` string,</span><br><span class=\"line\">\t`http_user_agent` string,</span><br><span class=\"line\">\t`cookie_u` string,</span><br><span class=\"line\">\t`http_x_forwarded_for` string,</span><br><span class=\"line\">\t`upstream_status` string,</span><br><span class=\"line\">\t`upstream_addr` string,</span><br><span class=\"line\">\t`resp_content_type` string,</span><br><span class=\"line\">\t`upstream_response_time` string,</span><br><span class=\"line\">\t`request` string</span><br><span class=\"line\">) </span><br><span class=\"line\"> PARTITIONED BY (dt string);</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"AB压力测试\"><a href=\"#AB压力测试\" class=\"headerlink\" title=\"AB压力测试\"></a>AB压力测试</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"> yum -y install httpd-tools</span><br><span class=\"line\">[root@zookeeperslave2 ~]# ab -c 1000 -n 10000 -r  http://192.168.1.169/aaa</span><br><span class=\"line\">This is ApacheBench, Version 2.3 &lt;$Revision: 1430300 $&gt;</span><br><span class=\"line\">Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/</span><br><span class=\"line\">Licensed to The Apache Software Foundation, http://www.apache.org/</span><br><span class=\"line\"></span><br><span class=\"line\">Benchmarking 192.168.1.169 (be patient)</span><br><span class=\"line\">Completed 1000 requests</span><br><span class=\"line\">Completed 2000 requests</span><br><span class=\"line\">Completed 3000 requests</span><br><span class=\"line\">Completed 4000 requests</span><br><span class=\"line\">Completed 5000 requests</span><br><span class=\"line\">Completed 6000 requests</span><br><span class=\"line\">Completed 7000 requests</span><br><span class=\"line\">Completed 8000 requests</span><br><span class=\"line\">Completed 9000 requests</span><br><span class=\"line\">Completed 10000 requests</span><br><span class=\"line\">Finished 10000 requests</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Server Software:        nginx/1.14.1</span><br><span class=\"line\">Server Hostname:        192.168.1.169</span><br><span class=\"line\">Server Port:            80</span><br><span class=\"line\"></span><br><span class=\"line\">Document Path:          /aaa</span><br><span class=\"line\">Document Length:        17 bytes</span><br><span class=\"line\"></span><br><span class=\"line\">Concurrency Level:      1000</span><br><span class=\"line\">Time taken for tests:   1.508 seconds</span><br><span class=\"line\">Complete requests:      10000</span><br><span class=\"line\">Failed requests:        0</span><br><span class=\"line\">Write errors:           0</span><br><span class=\"line\">Total transferred:      1660000 bytes</span><br><span class=\"line\">HTML transferred:       170000 bytes</span><br><span class=\"line\">Requests per second:    6632.41 [#/sec] (mean)</span><br><span class=\"line\">Time per request:       150.775 [ms] (mean)</span><br><span class=\"line\">Time per request:       0.151 [ms] (mean, across all concurrent requests)</span><br><span class=\"line\">Transfer rate:          1075.18 [Kbytes/sec] received</span><br><span class=\"line\"></span><br><span class=\"line\">Connection Times (ms)</span><br><span class=\"line\">              min  mean[+/-sd] median   max</span><br><span class=\"line\">Connect:        0   52 169.9     18    1040</span><br><span class=\"line\">Processing:    11   50  29.4     41     273</span><br><span class=\"line\">Waiting:        0   48  29.3     39     270</span><br><span class=\"line\">Total:         30  102 171.4     65    1292</span><br><span class=\"line\"></span><br><span class=\"line\">Percentage of the requests served within a certain time (ms)</span><br><span class=\"line\">  50%     65</span><br><span class=\"line\">  66%     73</span><br><span class=\"line\">  75%     82</span><br><span class=\"line\">  80%     90</span><br><span class=\"line\">  90%    150</span><br><span class=\"line\">  95%    156</span><br><span class=\"line\">  98%   1059</span><br><span class=\"line\">  99%   1065</span><br><span class=\"line\"> 100%   1292 (longest request)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"问题集结\"><a href=\"#问题集结\" class=\"headerlink\" title=\"问题集结\"></a>问题集结</h2><ol>\n<li>AIO找不到的问题</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">./configure: no supported file AIO was found</span><br><span class=\"line\">Currently file AIO is supported on FreeBSD 4.3+ and Linux 2.6.22+ only</span><br></pre></td></tr></table></figure>\n\n<p>安装开发者工具</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">yum groupinstall &#x27;Development Tools&#x27;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>缺少libxml2&#x2F;libxslt模块</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">./configure: error: the HTTP XSLT module requires the libxml2/libxslt</span><br><span class=\"line\">libraries. You can either do not enable the module or install the libraries.</span><br></pre></td></tr></table></figure>\n\n<p>安装\b缺失库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">yum -y install libxml2 libxml2-dev</span><br><span class=\"line\">yum -y install libxslt-devel</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>缺少GD库</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">./configure: error: the HTTP image filter module requires the GD library.</span><br><span class=\"line\">You can either do not enable the module or install the libraries.</span><br></pre></td></tr></table></figure>\n\n<p>安装GD库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">yum -y install gd-devel</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>缺少ExtUtils</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">./configure: error: perl module ExtUtils::Embed is required</span><br></pre></td></tr></table></figure>\n\n<p>安装ExtUtils</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">yum -y install perl-devel perl-ExtUtils-Embed</span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>缺少GeoIP库</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">./configure: error: the GeoIP module requires the GeoIP library.</span><br><span class=\"line\">You can either do not enable the module or install the library.</span><br></pre></td></tr></table></figure>\n\n<p>安装缺失库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">yum -y install GeoIP GeoIP-devel GeoIP-data</span><br></pre></td></tr></table></figure>\n\n<p>6、 缺少Google Perftools （编译环境我是不装这个的，从编译选线去除这个依赖就行）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">./configure: error: the Google perftools module requires the Google perftools</span><br><span class=\"line\">library. You can either do not enable the module or install the library.</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 安装libunwind</span><br><span class=\"line\">wget http://download.savannah.gnu.org/releases/libunwind/libunwind-0.99-beta.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar zxvf libunwind-0.99-beta.tar.gz</span><br><span class=\"line\">cd libunwind-0.99-beta</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装google-perftools</span><br><span class=\"line\">wget https://github.com/gperftools/gperftools/releases/download/gperftools-2.5/gperftools-2.5.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar zxvf gperftools-2.5.tar.gz</span><br><span class=\"line\">cd gperftools-2.5</span><br><span class=\"line\">./configure --prefix=/usr/local/gperftools</span><br><span class=\"line\">make &amp;&amp; make install</span><br><span class=\"line\">vi /etc/ld.so.conf.d/usr_local_lib.conf</span><br><span class=\"line\">#加入</span><br><span class=\"line\">/usr/local/lib</span><br><span class=\"line\">ldconfig</span><br><span class=\"line\"></span><br><span class=\"line\"># 添加环境</span><br><span class=\"line\">vi /etc/profile</span><br><span class=\"line\">export LD_PRELOAD=/usr/local/gperftools/lib/libtcmalloc.so</span><br><span class=\"line\">export HEAPPROFILE=/usr/bin/gzip</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>8.模块版本不对 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">[emerg] module &quot;/usr/lib64/nginx/modules/ngx_http_geoip_module.so&quot; version 1012002 instead of 1...ip.conf:1</span><br></pre></td></tr></table></figure>\n\n<p>这个错误是因为之前nginx是yum安装的他的版本是1.12.*的  我这次安装的nginx是最新版本1.14.*的所以我需要对这个模块进行升级</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">vi /etc/yum.repos.d/nginx.repo</span><br><span class=\"line\"></span><br><span class=\"line\">[nginx]</span><br><span class=\"line\">name=nginx repo</span><br><span class=\"line\">baseurl=http://nginx.org/packages/centos/7/$basearch/</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\">enabled=1</span><br><span class=\"line\"></span><br><span class=\"line\">yum remove nginx-mod*</span><br><span class=\"line\">yum install nginx-module-*</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","path":"2018/11/14/2018-11-14-从零编译nginx-lua-cjson模块的nginx服务实现日志全程监控/","permalink":"https://yuekang.org.cn/2018/11/14/2018-11-14-%E4%BB%8E%E9%9B%B6%E7%BC%96%E8%AF%91nginx-lua-cjson%E6%A8%A1%E5%9D%97%E7%9A%84nginx%E6%9C%8D%E5%8A%A1%E5%AE%9E%E7%8E%B0%E6%97%A5%E5%BF%97%E5%85%A8%E7%A8%8B%E7%9B%91%E6%8E%A7/","tags":[{"name":"nginx","_id":"cm0oplax30055uysng0vm5hdv","slug":"nginx","path":"tags/nginx/","permalink":"https://yuekang.org.cn/tags/nginx/","length":3},{"name":"监控","_id":"cm0oplax8006muysn279t3jkw","slug":"监控","path":"tags/监控/","permalink":"https://yuekang.org.cn/tags/%E7%9B%91%E6%8E%A7/","length":1},{"name":"lua","_id":"cm0oplax8006nuysnb9t44d5y","slug":"lua","path":"tags/lua/","permalink":"https://yuekang.org.cn/tags/lua/","length":1}],"categories":[],"prev":{"title":"LDAP 分享","date":"2018-11-28T14:22:42.000Z","slug":"2018-11-28-LDAP-分享","published":true,"updated":"2024-09-02T09:06:11.431Z","_id":"cm0oplawq002iuysnb4tu0o4i","layout":"post","photos":[],"excerpt":"","path":"2018/11/28/2018-11-28-LDAP-分享/","permalink":"https://yuekang.org.cn/2018/11/28/2018-11-28-LDAP-%E5%88%86%E4%BA%AB/","__post":true},"next":{"title":"nginx上部署nginx-json-log来监控网站上接口的详细数据","date":"2018-11-12T02:55:49.000Z","slug":"2018-11-12-nginx上部署nginx-json-log来监控网站上接口的详细数据","published":true,"updated":"2024-09-02T09:06:11.431Z","_id":"cm0oplawp002fuysne5be719j","layout":"post","photos":[],"excerpt":"","path":"2018/11/12/2018-11-12-nginx上部署nginx-json-log来监控网站上接口的详细数据/","permalink":"https://yuekang.org.cn/2018/11/12/2018-11-12-nginx%E4%B8%8A%E9%83%A8%E7%BD%B2nginx-json-log%E6%9D%A5%E7%9B%91%E6%8E%A7%E7%BD%91%E7%AB%99%E4%B8%8A%E6%8E%A5%E5%8F%A3%E7%9A%84%E8%AF%A6%E7%BB%86%E6%95%B0%E6%8D%AE/","__post":true},"__post":true}