{"title":"LDAP 分享","date":"2018-11-28T14:22:42.000Z","source":"_posts/2018-11-28.LDAP_分享_.md","raw":"---\ntitle: LDAP 分享 \ndate: 2018-11-28 22:22:42\ntags: [LDAP,OpenLdap]\n---\n\n>轻型目录访问协议（英文：Lightweight Directory Access Protocol，缩写：LDAP）是一个开放的，中立的，工业标准的应用协议，通过IP协议提供访问控制和维护分布式信息的目录信息。\n>OpenLDAP是轻型目录访问协议（Lightweight Directory Access Protocol，LDAP）的自由和开源的实现，在其OpenLDAP许可证下发行，并已经被包含在众多流行的Linux发行版中。\n\n## 目录服务\n\n目录是一个为查询、浏览和搜索而优化的专业分布式数据库，它呈树状结构组织数据，就好象Linux/Unix系统中的文件目录一样。目录数据库和关系数据库不同，它有优异的读性能，但写性能差，并且没有事务处理、回滚等复杂功能，不适于存储修改频繁的数据。所以目录天生是用来查询的，就好象它的名字一样。\n\n## LDAP特点\n\n* LDAP的结构用树来表示，而不是用表格。正因为这样，就不能用SQL语句了\n\n* LDAP可以很快地得到查询结果，不过在写方面，就慢得多\n* LDAP提供了静态数据的快速查询方式\n* Client/server模型，Server 用于存储数据，Client提供操作目录信息树的工具\n* 这些工具可以将数据库的内容以文本格式（LDAP 数据交换格式，LDIF）呈现在您的面前\n* LDAP是一种开放Internet标准，LDAP协议是跨平台的Interent协议\n\n## LDAP组成形式\n\n![组成图](http://img.yuekang.org.cn/2018112801.png)\n\n## 基本概念\n\n1. Entry\n条目，也叫记录项，是LDAP中最基本的颗粒，就像字典中的词条，或者是数据库中的记录。通常对LDAP的添加、删除、更改、检索都是以条目为基本对象的。\n\n**DN** 标识名（distinguished Name ，DN） 例如：**cn=baby,ou=marketing,ou=people,dc=mydomain,dc=org** 通过DN的层次型语法结构，可以方便地表示出条目在LDAP树中的位置，通常用于检索。\n\n**RDN** 一般指dn逗号最左边的部分，如cn=baby。它与RootDN不同，RootDN通常与RootPW同时出现，特指管理LDAP中信息的最高权限用户。\n\n**Base DN** LDAP目录树的最顶部就是根，也就是所谓的“Base DN”，如”dc=mydomain,dc=org”。\n\n2. Attribute\n\n每个条目都可以有很多属性（Attribute），比如常见的人都有姓名、地址、电话等属性。每个属性都有名称及对应的值，属性值可以有单个、多个，比如你有多个邮箱。\n属性不是随便定义的，需要符合一定的规则，而这个规则可以通过schema制定,在openLDAP中通过导入基础的schema才能导入用户的账户信息\n\n\n| 属性 | 别名 | 语法 | 描述 | 值 |\n| :------| ------: | :------: |------: |------: |\n| commonName | cn | Directory String | 姓名 | sean |\n| surname |\tsn\t| Directory String |\t姓\t| Chow |\n| organizationalUnitName |\tou\t| Directory String |\t单位名\t| Chow |\n\n3. ObjectClass\n\n属性不是随便定义的，需要符合一定的规则，而这个规则可以通过schema制定。ObjectClass是属性的集合，LDAP预想了很多人员组织机构中常见的对象，并将其封装成对象类。比如人员（person）含有姓（sn）、名（cn）、电话(telephoneNumber)、密码(userPassword)等属性，单位职工(organizationalPerson)是人员(person)的继承类，除了上述属性之外还含有职务（title）、邮政编码（postalCode）、通信地址(postalAddress)等属性。通过对象类可以方便的定义条目类型。每个条目可以直接继承多个对象类，这样就继承了各种属性。eNumber属性，因为employeeNumber是在inetOrgPerson中定义的。\n\n\n4. Schema\n\n对象类（ObjectClass）、属性类型（AttributeType）、语法（Syntax）分别约定了条目、属性、值。这些构成了模式(Schema)——对象类的集合。条目数据在导入时通常需要接受模式检查，它确保了目录中所有的条目数据结构都是一致的。\n\n5. LDIF\n\nLDIF（LDAP Data Interchange Format，数据交换格式）是LDAP数据库信息的一种文本格式，用于数据的导入导出，每行都是“属性: 值”\n行界定\n冒号分隔\n属性-值对\n\n```\ndn: uid=root,ou=People,dc=ethercap,dc=com\nuid: root\ncn: root\nobjectClass: account\nobjectClass: posixAccount\nobjectClass: top\nobjectClass: shadowAccount\nuserPassword: {crypt}$6$gNN9MrahZoiKSplA$2dGv8AIDmGNvwuCxI5LIC6Ub/pMwV0nvKnMoZL/ruagZautrmUQ96I2tjehR9hLt.emzhn/GG9C1dd5qoLHrB.\nshadowMin: 0\nshadowMax: 99999\nshadowWarning: 7\nloginShell: /bin/bash\nuidNumber: 0\ngidNumber: 0\nhomeDirectory: /root\ngecos: root\n```\n\n\n## 半小时快速搭建实战\n\n```shell\n//安装三大应用，服务端，客户端，导出导入工具\nyum install -y openldap-servers openldap-clients migrationtools\n\n//配置文件\ncp /usr/share/openldap-servers/DB_CONFIG.example /var/lib/ldap/DB_CONFIG\nchown ldap. /var/lib/ldap/DB_CONFIG\n\n//启动服务\nsystemctl start slapd\nsystemctl enable slapd\n\n//生成root密码\n╭─root@ykdev ~\n╰─# slappasswd\nNew password:\nRe-enter new password:\n{SSHA}/UFZ8EehpMMtKiiAy+vxdxH6fObhaF3l\n\n//修改rootdn密码\ncat chrootpw.ldif\ndn: olcDatabase={0}config,cn=config\nchangetype: modify\nadd: olcRootPW\nolcRootPW: {SSHA}/UFZ8EehpMMtKiiAy+vxdxH6fObhaF3l\n\nldapadd -Y EXTERNAL -H ldapi:/// -f chrootpw.ldif\n\n\n\n//导出基础的Schema，这些 Schema 文件位于 /etc/openldap/schema/ 目录中，定义了我们以后创建的条目可以使用哪些属性\n[root@localhost ~]# ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/cosine.ldif \nSASL/EXTERNAL authentication started\nSASL username: gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth\nSASL SSF: 0\nadding new entry \"cn=cosine,cn=schema,cn=config\"\n\n[root@localhost ~]# ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/nis.ldif \nSASL/EXTERNAL authentication started\nSASL username: gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth\nSASL SSF: 0\nadding new entry \"cn=nis,cn=schema,cn=config\"\n\n[root@localhost ~]# ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/inetorgperson.ldif \nSASL/EXTERNAL authentication started\nSASL username: gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth\nSASL SSF: 0\nadding new entry \"cn=inetorgperson,cn=schema,cn=config\"\n\n//配置 LDAP 的顶级域\n[root@proxy ldap]# cat chdomain.ldif\ndn: olcDatabase={1}monitor,cn=config\nchangetype: modify\nreplace: olcAccess\nolcAccess: {0}to * by dn.base=\"gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth\"\n  read by dn.base=\"cn=Manager,dc=my-domain,dc=com\" read by * none\n\ndn: olcDatabase={2}hdb,cn=config\nchangetype: modify\nreplace: olcSuffix\nolcSuffix: dc=my-domain,dc=com\n\ndn: olcDatabase={2}hdb,cn=config\nchangetype: modify\nreplace: olcRootDN\nolcRootDN: cn=Manager,dc=my-domain,dc=com\n\ndn: olcDatabase={2}hdb,cn=config\nchangetype: modify\nreplace: olcRootPW\nolcRootPW: {SSHA}/UFZ8EehpMMtKiiAy+vxdxH6fObhaF3l\n\ndn: olcDatabase={2}hdb,cn=config\nchangetype: modify\nadd: olcAccess\nolcAccess: {0}to attrs=userPassword,shadowLastChange by\n  dn=\"cn=Manager,dc=my-domain,dc=com\" write by anonymous auth by self write by * none\nolcAccess: {1}to dn.base=\"\" by * read\nolcAccess: {2}to * by dn=\"cn=Manager,dc=my-domain,dc=com\" write by * read\n\n[root@localhost ~]# ldapmodify -Y EXTERNAL -H ldapi:/// -f chdomain.ldif \n\n//导入基础组信息什么的\n[root@proxy ldap]# cat base.ldif\ndn: dc=my-domain,dc=com\ndc: my-domain\nobjectClass: top\nobjectClass: domain\n\ndn: ou=People,dc=my-domain,dc=com\nou: People\nobjectClass: top\nobjectClass: organizationalUnit\n\ndn: ou=Group,dc=my-domain,dc=com\nou: Group\nobjectClass: top\nobjectClass: organizationalUnit\n\nldapadd -x -D \"cn=Manager,dc=my-domain,dc=com\" -W -f base.ldif\n\n//导入用户信息\n//修改域名基础信息\nvi /usr/share/migrationtools/migrate_common.ph\n$DEFAULT_BASE = \"dc=my-domain,dc=com\";\n[root@proxy ldap]# /usr/share/migrationtools/migrate_passwd.pl /etc/passwd passwd.ldif\n[root@proxy ldap]# /usr/share/migrationtools/migrate_group.pl /etc/group group.ldif\n[root@proxy ldap]# ldapadd -x -D cn=Manager,dc=my-domain,dc=com -W -f passwd.ldif\n[root@proxy ldap]# ldapadd -x -D cn=Manager,dc=my-domain,dc=com -W -f group.ldif\n\n//查看所有记录\n[root@proxy ldap]# ldapsearch -x -b \"dc=my-domain,dc=com\" -H ldap://192.168.1.1\n\n\n\n\n","slug":"2018-11-28-LDAP-分享","published":true,"updated":"2024-09-02T09:06:11.431Z","_id":"cm0ozrkim002ifisn4uz18239","comments":true,"layout":"post","photos":[],"html":"<blockquote>\n<p>轻型目录访问协议（英文：Lightweight Directory Access Protocol，缩写：LDAP）是一个开放的，中立的，工业标准的应用协议，通过IP协议提供访问控制和维护分布式信息的目录信息。<br>OpenLDAP是轻型目录访问协议（Lightweight Directory Access Protocol，LDAP）的自由和开源的实现，在其OpenLDAP许可证下发行，并已经被包含在众多流行的Linux发行版中。</p>\n</blockquote>\n<h2 id=\"目录服务\"><a href=\"#目录服务\" class=\"headerlink\" title=\"目录服务\"></a>目录服务</h2><p>目录是一个为查询、浏览和搜索而优化的专业分布式数据库，它呈树状结构组织数据，就好象Linux&#x2F;Unix系统中的文件目录一样。目录数据库和关系数据库不同，它有优异的读性能，但写性能差，并且没有事务处理、回滚等复杂功能，不适于存储修改频繁的数据。所以目录天生是用来查询的，就好象它的名字一样。</p>\n<h2 id=\"LDAP特点\"><a href=\"#LDAP特点\" class=\"headerlink\" title=\"LDAP特点\"></a>LDAP特点</h2><ul>\n<li><p>LDAP的结构用树来表示，而不是用表格。正因为这样，就不能用SQL语句了</p>\n</li>\n<li><p>LDAP可以很快地得到查询结果，不过在写方面，就慢得多</p>\n</li>\n<li><p>LDAP提供了静态数据的快速查询方式</p>\n</li>\n<li><p>Client&#x2F;server模型，Server 用于存储数据，Client提供操作目录信息树的工具</p>\n</li>\n<li><p>这些工具可以将数据库的内容以文本格式（LDAP 数据交换格式，LDIF）呈现在您的面前</p>\n</li>\n<li><p>LDAP是一种开放Internet标准，LDAP协议是跨平台的Interent协议</p>\n</li>\n</ul>\n<h2 id=\"LDAP组成形式\"><a href=\"#LDAP组成形式\" class=\"headerlink\" title=\"LDAP组成形式\"></a>LDAP组成形式</h2><p><img src=\"http://img.yuekang.org.cn/2018112801.png\" alt=\"组成图\"></p>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><ol>\n<li>Entry<br>条目，也叫记录项，是LDAP中最基本的颗粒，就像字典中的词条，或者是数据库中的记录。通常对LDAP的添加、删除、更改、检索都是以条目为基本对象的。</li>\n</ol>\n<p><strong>DN</strong> 标识名（distinguished Name ，DN） 例如：<strong>cn&#x3D;baby,ou&#x3D;marketing,ou&#x3D;people,dc&#x3D;mydomain,dc&#x3D;org</strong> 通过DN的层次型语法结构，可以方便地表示出条目在LDAP树中的位置，通常用于检索。</p>\n<p><strong>RDN</strong> 一般指dn逗号最左边的部分，如cn&#x3D;baby。它与RootDN不同，RootDN通常与RootPW同时出现，特指管理LDAP中信息的最高权限用户。</p>\n<p><strong>Base DN</strong> LDAP目录树的最顶部就是根，也就是所谓的“Base DN”，如”dc&#x3D;mydomain,dc&#x3D;org”。</p>\n<ol start=\"2\">\n<li>Attribute</li>\n</ol>\n<p>每个条目都可以有很多属性（Attribute），比如常见的人都有姓名、地址、电话等属性。每个属性都有名称及对应的值，属性值可以有单个、多个，比如你有多个邮箱。<br>属性不是随便定义的，需要符合一定的规则，而这个规则可以通过schema制定,在openLDAP中通过导入基础的schema才能导入用户的账户信息</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">属性</th>\n<th align=\"right\">别名</th>\n<th align=\"center\">语法</th>\n<th align=\"right\">描述</th>\n<th align=\"right\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">commonName</td>\n<td align=\"right\">cn</td>\n<td align=\"center\">Directory String</td>\n<td align=\"right\">姓名</td>\n<td align=\"right\">sean</td>\n</tr>\n<tr>\n<td align=\"left\">surname</td>\n<td align=\"right\">sn</td>\n<td align=\"center\">Directory String</td>\n<td align=\"right\">姓</td>\n<td align=\"right\">Chow</td>\n</tr>\n<tr>\n<td align=\"left\">organizationalUnitName</td>\n<td align=\"right\">ou</td>\n<td align=\"center\">Directory String</td>\n<td align=\"right\">单位名</td>\n<td align=\"right\">Chow</td>\n</tr>\n</tbody></table>\n<ol start=\"3\">\n<li>ObjectClass</li>\n</ol>\n<p>属性不是随便定义的，需要符合一定的规则，而这个规则可以通过schema制定。ObjectClass是属性的集合，LDAP预想了很多人员组织机构中常见的对象，并将其封装成对象类。比如人员（person）含有姓（sn）、名（cn）、电话(telephoneNumber)、密码(userPassword)等属性，单位职工(organizationalPerson)是人员(person)的继承类，除了上述属性之外还含有职务（title）、邮政编码（postalCode）、通信地址(postalAddress)等属性。通过对象类可以方便的定义条目类型。每个条目可以直接继承多个对象类，这样就继承了各种属性。eNumber属性，因为employeeNumber是在inetOrgPerson中定义的。</p>\n<ol start=\"4\">\n<li>Schema</li>\n</ol>\n<p>对象类（ObjectClass）、属性类型（AttributeType）、语法（Syntax）分别约定了条目、属性、值。这些构成了模式(Schema)——对象类的集合。条目数据在导入时通常需要接受模式检查，它确保了目录中所有的条目数据结构都是一致的。</p>\n<ol start=\"5\">\n<li>LDIF</li>\n</ol>\n<p>LDIF（LDAP Data Interchange Format，数据交换格式）是LDAP数据库信息的一种文本格式，用于数据的导入导出，每行都是“属性: 值”<br>行界定<br>冒号分隔<br>属性-值对</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dn: uid=root,ou=People,dc=ethercap,dc=com</span><br><span class=\"line\">uid: root</span><br><span class=\"line\">cn: root</span><br><span class=\"line\">objectClass: account</span><br><span class=\"line\">objectClass: posixAccount</span><br><span class=\"line\">objectClass: top</span><br><span class=\"line\">objectClass: shadowAccount</span><br><span class=\"line\">userPassword: &#123;crypt&#125;$6$gNN9MrahZoiKSplA$2dGv8AIDmGNvwuCxI5LIC6Ub/pMwV0nvKnMoZL/ruagZautrmUQ96I2tjehR9hLt.emzhn/GG9C1dd5qoLHrB.</span><br><span class=\"line\">shadowMin: 0</span><br><span class=\"line\">shadowMax: 99999</span><br><span class=\"line\">shadowWarning: 7</span><br><span class=\"line\">loginShell: /bin/bash</span><br><span class=\"line\">uidNumber: 0</span><br><span class=\"line\">gidNumber: 0</span><br><span class=\"line\">homeDirectory: /root</span><br><span class=\"line\">gecos: root</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"半小时快速搭建实战\"><a href=\"#半小时快速搭建实战\" class=\"headerlink\" title=\"半小时快速搭建实战\"></a>半小时快速搭建实战</h2><pre><code class=\"shell\">//安装三大应用，服务端，客户端，导出导入工具\nyum install -y openldap-servers openldap-clients migrationtools\n\n//配置文件\ncp /usr/share/openldap-servers/DB_CONFIG.example /var/lib/ldap/DB_CONFIG\nchown ldap. /var/lib/ldap/DB_CONFIG\n\n//启动服务\nsystemctl start slapd\nsystemctl enable slapd\n\n//生成root密码\n╭─root@ykdev ~\n╰─# slappasswd\nNew password:\nRe-enter new password:\n&#123;SSHA&#125;/UFZ8EehpMMtKiiAy+vxdxH6fObhaF3l\n\n//修改rootdn密码\ncat chrootpw.ldif\ndn: olcDatabase=&#123;0&#125;config,cn=config\nchangetype: modify\nadd: olcRootPW\nolcRootPW: &#123;SSHA&#125;/UFZ8EehpMMtKiiAy+vxdxH6fObhaF3l\n\nldapadd -Y EXTERNAL -H ldapi:/// -f chrootpw.ldif\n\n\n\n//导出基础的Schema，这些 Schema 文件位于 /etc/openldap/schema/ 目录中，定义了我们以后创建的条目可以使用哪些属性\n[root@localhost ~]# ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/cosine.ldif \nSASL/EXTERNAL authentication started\nSASL username: gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth\nSASL SSF: 0\nadding new entry &quot;cn=cosine,cn=schema,cn=config&quot;\n\n[root@localhost ~]# ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/nis.ldif \nSASL/EXTERNAL authentication started\nSASL username: gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth\nSASL SSF: 0\nadding new entry &quot;cn=nis,cn=schema,cn=config&quot;\n\n[root@localhost ~]# ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/inetorgperson.ldif \nSASL/EXTERNAL authentication started\nSASL username: gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth\nSASL SSF: 0\nadding new entry &quot;cn=inetorgperson,cn=schema,cn=config&quot;\n\n//配置 LDAP 的顶级域\n[root@proxy ldap]# cat chdomain.ldif\ndn: olcDatabase=&#123;1&#125;monitor,cn=config\nchangetype: modify\nreplace: olcAccess\nolcAccess: &#123;0&#125;to * by dn.base=&quot;gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth&quot;\n  read by dn.base=&quot;cn=Manager,dc=my-domain,dc=com&quot; read by * none\n\ndn: olcDatabase=&#123;2&#125;hdb,cn=config\nchangetype: modify\nreplace: olcSuffix\nolcSuffix: dc=my-domain,dc=com\n\ndn: olcDatabase=&#123;2&#125;hdb,cn=config\nchangetype: modify\nreplace: olcRootDN\nolcRootDN: cn=Manager,dc=my-domain,dc=com\n\ndn: olcDatabase=&#123;2&#125;hdb,cn=config\nchangetype: modify\nreplace: olcRootPW\nolcRootPW: &#123;SSHA&#125;/UFZ8EehpMMtKiiAy+vxdxH6fObhaF3l\n\ndn: olcDatabase=&#123;2&#125;hdb,cn=config\nchangetype: modify\nadd: olcAccess\nolcAccess: &#123;0&#125;to attrs=userPassword,shadowLastChange by\n  dn=&quot;cn=Manager,dc=my-domain,dc=com&quot; write by anonymous auth by self write by * none\nolcAccess: &#123;1&#125;to dn.base=&quot;&quot; by * read\nolcAccess: &#123;2&#125;to * by dn=&quot;cn=Manager,dc=my-domain,dc=com&quot; write by * read\n\n[root@localhost ~]# ldapmodify -Y EXTERNAL -H ldapi:/// -f chdomain.ldif \n\n//导入基础组信息什么的\n[root@proxy ldap]# cat base.ldif\ndn: dc=my-domain,dc=com\ndc: my-domain\nobjectClass: top\nobjectClass: domain\n\ndn: ou=People,dc=my-domain,dc=com\nou: People\nobjectClass: top\nobjectClass: organizationalUnit\n\ndn: ou=Group,dc=my-domain,dc=com\nou: Group\nobjectClass: top\nobjectClass: organizationalUnit\n\nldapadd -x -D &quot;cn=Manager,dc=my-domain,dc=com&quot; -W -f base.ldif\n\n//导入用户信息\n//修改域名基础信息\nvi /usr/share/migrationtools/migrate_common.ph\n$DEFAULT_BASE = &quot;dc=my-domain,dc=com&quot;;\n[root@proxy ldap]# /usr/share/migrationtools/migrate_passwd.pl /etc/passwd passwd.ldif\n[root@proxy ldap]# /usr/share/migrationtools/migrate_group.pl /etc/group group.ldif\n[root@proxy ldap]# ldapadd -x -D cn=Manager,dc=my-domain,dc=com -W -f passwd.ldif\n[root@proxy ldap]# ldapadd -x -D cn=Manager,dc=my-domain,dc=com -W -f group.ldif\n\n//查看所有记录\n[root@proxy ldap]# ldapsearch -x -b &quot;dc=my-domain,dc=com&quot; -H ldap://192.168.1.1\n\n\n\n</code></pre>\n","excerpt":"","more":"<blockquote>\n<p>轻型目录访问协议（英文：Lightweight Directory Access Protocol，缩写：LDAP）是一个开放的，中立的，工业标准的应用协议，通过IP协议提供访问控制和维护分布式信息的目录信息。<br>OpenLDAP是轻型目录访问协议（Lightweight Directory Access Protocol，LDAP）的自由和开源的实现，在其OpenLDAP许可证下发行，并已经被包含在众多流行的Linux发行版中。</p>\n</blockquote>\n<h2 id=\"目录服务\"><a href=\"#目录服务\" class=\"headerlink\" title=\"目录服务\"></a>目录服务</h2><p>目录是一个为查询、浏览和搜索而优化的专业分布式数据库，它呈树状结构组织数据，就好象Linux&#x2F;Unix系统中的文件目录一样。目录数据库和关系数据库不同，它有优异的读性能，但写性能差，并且没有事务处理、回滚等复杂功能，不适于存储修改频繁的数据。所以目录天生是用来查询的，就好象它的名字一样。</p>\n<h2 id=\"LDAP特点\"><a href=\"#LDAP特点\" class=\"headerlink\" title=\"LDAP特点\"></a>LDAP特点</h2><ul>\n<li><p>LDAP的结构用树来表示，而不是用表格。正因为这样，就不能用SQL语句了</p>\n</li>\n<li><p>LDAP可以很快地得到查询结果，不过在写方面，就慢得多</p>\n</li>\n<li><p>LDAP提供了静态数据的快速查询方式</p>\n</li>\n<li><p>Client&#x2F;server模型，Server 用于存储数据，Client提供操作目录信息树的工具</p>\n</li>\n<li><p>这些工具可以将数据库的内容以文本格式（LDAP 数据交换格式，LDIF）呈现在您的面前</p>\n</li>\n<li><p>LDAP是一种开放Internet标准，LDAP协议是跨平台的Interent协议</p>\n</li>\n</ul>\n<h2 id=\"LDAP组成形式\"><a href=\"#LDAP组成形式\" class=\"headerlink\" title=\"LDAP组成形式\"></a>LDAP组成形式</h2><p><img src=\"http://img.yuekang.org.cn/2018112801.png\" alt=\"组成图\"></p>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><ol>\n<li>Entry<br>条目，也叫记录项，是LDAP中最基本的颗粒，就像字典中的词条，或者是数据库中的记录。通常对LDAP的添加、删除、更改、检索都是以条目为基本对象的。</li>\n</ol>\n<p><strong>DN</strong> 标识名（distinguished Name ，DN） 例如：<strong>cn&#x3D;baby,ou&#x3D;marketing,ou&#x3D;people,dc&#x3D;mydomain,dc&#x3D;org</strong> 通过DN的层次型语法结构，可以方便地表示出条目在LDAP树中的位置，通常用于检索。</p>\n<p><strong>RDN</strong> 一般指dn逗号最左边的部分，如cn&#x3D;baby。它与RootDN不同，RootDN通常与RootPW同时出现，特指管理LDAP中信息的最高权限用户。</p>\n<p><strong>Base DN</strong> LDAP目录树的最顶部就是根，也就是所谓的“Base DN”，如”dc&#x3D;mydomain,dc&#x3D;org”。</p>\n<ol start=\"2\">\n<li>Attribute</li>\n</ol>\n<p>每个条目都可以有很多属性（Attribute），比如常见的人都有姓名、地址、电话等属性。每个属性都有名称及对应的值，属性值可以有单个、多个，比如你有多个邮箱。<br>属性不是随便定义的，需要符合一定的规则，而这个规则可以通过schema制定,在openLDAP中通过导入基础的schema才能导入用户的账户信息</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">属性</th>\n<th align=\"right\">别名</th>\n<th align=\"center\">语法</th>\n<th align=\"right\">描述</th>\n<th align=\"right\">值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">commonName</td>\n<td align=\"right\">cn</td>\n<td align=\"center\">Directory String</td>\n<td align=\"right\">姓名</td>\n<td align=\"right\">sean</td>\n</tr>\n<tr>\n<td align=\"left\">surname</td>\n<td align=\"right\">sn</td>\n<td align=\"center\">Directory String</td>\n<td align=\"right\">姓</td>\n<td align=\"right\">Chow</td>\n</tr>\n<tr>\n<td align=\"left\">organizationalUnitName</td>\n<td align=\"right\">ou</td>\n<td align=\"center\">Directory String</td>\n<td align=\"right\">单位名</td>\n<td align=\"right\">Chow</td>\n</tr>\n</tbody></table>\n<ol start=\"3\">\n<li>ObjectClass</li>\n</ol>\n<p>属性不是随便定义的，需要符合一定的规则，而这个规则可以通过schema制定。ObjectClass是属性的集合，LDAP预想了很多人员组织机构中常见的对象，并将其封装成对象类。比如人员（person）含有姓（sn）、名（cn）、电话(telephoneNumber)、密码(userPassword)等属性，单位职工(organizationalPerson)是人员(person)的继承类，除了上述属性之外还含有职务（title）、邮政编码（postalCode）、通信地址(postalAddress)等属性。通过对象类可以方便的定义条目类型。每个条目可以直接继承多个对象类，这样就继承了各种属性。eNumber属性，因为employeeNumber是在inetOrgPerson中定义的。</p>\n<ol start=\"4\">\n<li>Schema</li>\n</ol>\n<p>对象类（ObjectClass）、属性类型（AttributeType）、语法（Syntax）分别约定了条目、属性、值。这些构成了模式(Schema)——对象类的集合。条目数据在导入时通常需要接受模式检查，它确保了目录中所有的条目数据结构都是一致的。</p>\n<ol start=\"5\">\n<li>LDIF</li>\n</ol>\n<p>LDIF（LDAP Data Interchange Format，数据交换格式）是LDAP数据库信息的一种文本格式，用于数据的导入导出，每行都是“属性: 值”<br>行界定<br>冒号分隔<br>属性-值对</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dn: uid=root,ou=People,dc=ethercap,dc=com</span><br><span class=\"line\">uid: root</span><br><span class=\"line\">cn: root</span><br><span class=\"line\">objectClass: account</span><br><span class=\"line\">objectClass: posixAccount</span><br><span class=\"line\">objectClass: top</span><br><span class=\"line\">objectClass: shadowAccount</span><br><span class=\"line\">userPassword: &#123;crypt&#125;$6$gNN9MrahZoiKSplA$2dGv8AIDmGNvwuCxI5LIC6Ub/pMwV0nvKnMoZL/ruagZautrmUQ96I2tjehR9hLt.emzhn/GG9C1dd5qoLHrB.</span><br><span class=\"line\">shadowMin: 0</span><br><span class=\"line\">shadowMax: 99999</span><br><span class=\"line\">shadowWarning: 7</span><br><span class=\"line\">loginShell: /bin/bash</span><br><span class=\"line\">uidNumber: 0</span><br><span class=\"line\">gidNumber: 0</span><br><span class=\"line\">homeDirectory: /root</span><br><span class=\"line\">gecos: root</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"半小时快速搭建实战\"><a href=\"#半小时快速搭建实战\" class=\"headerlink\" title=\"半小时快速搭建实战\"></a>半小时快速搭建实战</h2><pre><code class=\"shell\">//安装三大应用，服务端，客户端，导出导入工具\nyum install -y openldap-servers openldap-clients migrationtools\n\n//配置文件\ncp /usr/share/openldap-servers/DB_CONFIG.example /var/lib/ldap/DB_CONFIG\nchown ldap. /var/lib/ldap/DB_CONFIG\n\n//启动服务\nsystemctl start slapd\nsystemctl enable slapd\n\n//生成root密码\n╭─root@ykdev ~\n╰─# slappasswd\nNew password:\nRe-enter new password:\n&#123;SSHA&#125;/UFZ8EehpMMtKiiAy+vxdxH6fObhaF3l\n\n//修改rootdn密码\ncat chrootpw.ldif\ndn: olcDatabase=&#123;0&#125;config,cn=config\nchangetype: modify\nadd: olcRootPW\nolcRootPW: &#123;SSHA&#125;/UFZ8EehpMMtKiiAy+vxdxH6fObhaF3l\n\nldapadd -Y EXTERNAL -H ldapi:/// -f chrootpw.ldif\n\n\n\n//导出基础的Schema，这些 Schema 文件位于 /etc/openldap/schema/ 目录中，定义了我们以后创建的条目可以使用哪些属性\n[root@localhost ~]# ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/cosine.ldif \nSASL/EXTERNAL authentication started\nSASL username: gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth\nSASL SSF: 0\nadding new entry &quot;cn=cosine,cn=schema,cn=config&quot;\n\n[root@localhost ~]# ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/nis.ldif \nSASL/EXTERNAL authentication started\nSASL username: gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth\nSASL SSF: 0\nadding new entry &quot;cn=nis,cn=schema,cn=config&quot;\n\n[root@localhost ~]# ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/inetorgperson.ldif \nSASL/EXTERNAL authentication started\nSASL username: gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth\nSASL SSF: 0\nadding new entry &quot;cn=inetorgperson,cn=schema,cn=config&quot;\n\n//配置 LDAP 的顶级域\n[root@proxy ldap]# cat chdomain.ldif\ndn: olcDatabase=&#123;1&#125;monitor,cn=config\nchangetype: modify\nreplace: olcAccess\nolcAccess: &#123;0&#125;to * by dn.base=&quot;gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth&quot;\n  read by dn.base=&quot;cn=Manager,dc=my-domain,dc=com&quot; read by * none\n\ndn: olcDatabase=&#123;2&#125;hdb,cn=config\nchangetype: modify\nreplace: olcSuffix\nolcSuffix: dc=my-domain,dc=com\n\ndn: olcDatabase=&#123;2&#125;hdb,cn=config\nchangetype: modify\nreplace: olcRootDN\nolcRootDN: cn=Manager,dc=my-domain,dc=com\n\ndn: olcDatabase=&#123;2&#125;hdb,cn=config\nchangetype: modify\nreplace: olcRootPW\nolcRootPW: &#123;SSHA&#125;/UFZ8EehpMMtKiiAy+vxdxH6fObhaF3l\n\ndn: olcDatabase=&#123;2&#125;hdb,cn=config\nchangetype: modify\nadd: olcAccess\nolcAccess: &#123;0&#125;to attrs=userPassword,shadowLastChange by\n  dn=&quot;cn=Manager,dc=my-domain,dc=com&quot; write by anonymous auth by self write by * none\nolcAccess: &#123;1&#125;to dn.base=&quot;&quot; by * read\nolcAccess: &#123;2&#125;to * by dn=&quot;cn=Manager,dc=my-domain,dc=com&quot; write by * read\n\n[root@localhost ~]# ldapmodify -Y EXTERNAL -H ldapi:/// -f chdomain.ldif \n\n//导入基础组信息什么的\n[root@proxy ldap]# cat base.ldif\ndn: dc=my-domain,dc=com\ndc: my-domain\nobjectClass: top\nobjectClass: domain\n\ndn: ou=People,dc=my-domain,dc=com\nou: People\nobjectClass: top\nobjectClass: organizationalUnit\n\ndn: ou=Group,dc=my-domain,dc=com\nou: Group\nobjectClass: top\nobjectClass: organizationalUnit\n\nldapadd -x -D &quot;cn=Manager,dc=my-domain,dc=com&quot; -W -f base.ldif\n\n//导入用户信息\n//修改域名基础信息\nvi /usr/share/migrationtools/migrate_common.ph\n$DEFAULT_BASE = &quot;dc=my-domain,dc=com&quot;;\n[root@proxy ldap]# /usr/share/migrationtools/migrate_passwd.pl /etc/passwd passwd.ldif\n[root@proxy ldap]# /usr/share/migrationtools/migrate_group.pl /etc/group group.ldif\n[root@proxy ldap]# ldapadd -x -D cn=Manager,dc=my-domain,dc=com -W -f passwd.ldif\n[root@proxy ldap]# ldapadd -x -D cn=Manager,dc=my-domain,dc=com -W -f group.ldif\n\n//查看所有记录\n[root@proxy ldap]# ldapsearch -x -b &quot;dc=my-domain,dc=com&quot; -H ldap://192.168.1.1\n\n\n\n</code></pre>\n","path":"2018/11/28/2018-11-28-LDAP-分享/","permalink":"https://yuekang.org.cn/2018/11/28/2018-11-28-LDAP-%E5%88%86%E4%BA%AB/","tags":[{"name":"LDAP","_id":"cm0ozrkix004zfisne089fmti","slug":"LDAP","path":"tags/LDAP/","permalink":"https://yuekang.org.cn/tags/LDAP/","length":2},{"name":"OpenLdap","_id":"cm0ozrkj10064fisn1k19281w","slug":"OpenLdap","path":"tags/OpenLdap/","permalink":"https://yuekang.org.cn/tags/OpenLdap/","length":2}],"categories":[],"prev":{"title":"Centos 端口转发管理","date":"2018-12-14T02:12:47.000Z","slug":"2018-12-14-Centos-端口转发管理","published":true,"updated":"2024-09-02T09:06:11.431Z","_id":"cm0ozrkin002kfisn4ygx9kod","layout":"post","photos":[],"excerpt":"","path":"2018/12/14/2018-12-14-Centos-端口转发管理/","permalink":"https://yuekang.org.cn/2018/12/14/2018-12-14-Centos-%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E7%AE%A1%E7%90%86/","__post":true},"next":{"title":"从零编译nginx+lua+cjson模块的nginx服务实现日志全程监控","date":"2018-11-14T04:28:33.000Z","slug":"2018-11-14-从零编译nginx-lua-cjson模块的nginx服务实现日志全程监控","published":true,"updated":"2024-09-02T09:06:11.431Z","_id":"cm0ozrkim002gfisne0bkb903","layout":"post","photos":[],"excerpt":"","path":"2018/11/14/2018-11-14-从零编译nginx-lua-cjson模块的nginx服务实现日志全程监控/","permalink":"https://yuekang.org.cn/2018/11/14/2018-11-14-%E4%BB%8E%E9%9B%B6%E7%BC%96%E8%AF%91nginx-lua-cjson%E6%A8%A1%E5%9D%97%E7%9A%84nginx%E6%9C%8D%E5%8A%A1%E5%AE%9E%E7%8E%B0%E6%97%A5%E5%BF%97%E5%85%A8%E7%A8%8B%E7%9B%91%E6%8E%A7/","__post":true},"__post":true}