{"title":"Snowflake（twitter 64位唯一ID生成算法）","date":"2017-12-09T07:34:07.000Z","source":"_posts/2017-12-09.Snowflake（twitter_64位唯一ID生成算法）.md","raw":"---\ntitle: Snowflake（twitter 64位唯一ID生成算法）\ndate: 2017-12-09 15:34:07\ntags: [算法,php]\n---\n\n>在很多业务场景中会遇到id唯一的问题，我就遇到很多，\n>数据库中的自增的生成，接下来我们一起学习唯一ID生成算法\n\n## Snowflake 组成结构\n\n1. 雪花算法总共64位组成(不要问我为什么，这是具体规定啊)\n\n  1.1 正负码1位 （通常为0）\n\n  1.2 毫秒级时间41位  \n\n  1.3 节点码10位\n\n        由于设计之初是分布式ID，所以这里基本上是5位节点码+机器码5位\n\n  1.4 序列码12位\n      累加计数器 最大1毫秒产生4095个不重复的id\n\n## 代码实现\n","slug":"2017-12-09-Snowflake（twitter-64位唯一ID生成算法）","published":true,"updated":"2024-09-02T09:06:11.422Z","_id":"cm0p092os000w3zsn60ry8au0","comments":true,"layout":"post","photos":[],"html":"<blockquote>\n<p>在很多业务场景中会遇到id唯一的问题，我就遇到很多，<br>数据库中的自增的生成，接下来我们一起学习唯一ID生成算法</p>\n</blockquote>\n<h2 id=\"Snowflake-组成结构\"><a href=\"#Snowflake-组成结构\" class=\"headerlink\" title=\"Snowflake 组成结构\"></a>Snowflake 组成结构</h2><ol>\n<li>雪花算法总共64位组成(不要问我为什么，这是具体规定啊)</li>\n</ol>\n<p>  1.1 正负码1位 （通常为0）</p>\n<p>  1.2 毫秒级时间41位  </p>\n<p>  1.3 节点码10位</p>\n<pre><code>    由于设计之初是分布式ID，所以这里基本上是5位节点码+机器码5位\n</code></pre>\n<p>  1.4 序列码12位<br>      累加计数器 最大1毫秒产生4095个不重复的id</p>\n<h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2>","excerpt":"","more":"<blockquote>\n<p>在很多业务场景中会遇到id唯一的问题，我就遇到很多，<br>数据库中的自增的生成，接下来我们一起学习唯一ID生成算法</p>\n</blockquote>\n<h2 id=\"Snowflake-组成结构\"><a href=\"#Snowflake-组成结构\" class=\"headerlink\" title=\"Snowflake 组成结构\"></a>Snowflake 组成结构</h2><ol>\n<li>雪花算法总共64位组成(不要问我为什么，这是具体规定啊)</li>\n</ol>\n<p>  1.1 正负码1位 （通常为0）</p>\n<p>  1.2 毫秒级时间41位  </p>\n<p>  1.3 节点码10位</p>\n<pre><code>    由于设计之初是分布式ID，所以这里基本上是5位节点码+机器码5位\n</code></pre>\n<p>  1.4 序列码12位<br>      累加计数器 最大1毫秒产生4095个不重复的id</p>\n<h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2>","path":"2017/12/09/2017-12-09-Snowflake（twitter-64位唯一ID生成算法）/","permalink":"https://yuekang.org.cn/2017/12/09/2017-12-09-Snowflake%EF%BC%88twitter-64%E4%BD%8D%E5%94%AF%E4%B8%80ID%E7%94%9F%E6%88%90%E7%AE%97%E6%B3%95%EF%BC%89/","tags":[{"name":"算法","_id":"cm0p092pq00313zsn2ux0ar3u","slug":"算法","path":"tags/算法/","permalink":"https://yuekang.org.cn/tags/%E7%AE%97%E6%B3%95/","length":1},{"name":"php","_id":"cm0p092pq00333zsnfzw58t1z","slug":"php","path":"tags/php/","permalink":"https://yuekang.org.cn/tags/php/","length":5}],"categories":[],"prev":{"title":"Spring boot 修改启动banner内容","date":"2017-12-19T02:21:32.000Z","slug":"2017-12-19-Spring-boot-修改启动banner内容","published":true,"updated":"2024-09-02T09:06:11.422Z","_id":"cm0p092ot000z3zsn6lzn6i8o","layout":"post","photos":[],"excerpt":"","path":"2017/12/19/2017-12-19-Spring-boot-修改启动banner内容/","permalink":"https://yuekang.org.cn/2017/12/19/2017-12-19-Spring-boot-%E4%BF%AE%E6%94%B9%E5%90%AF%E5%8A%A8banner%E5%86%85%E5%AE%B9/","__post":true},"next":{"title":"单例模式(PHP实现)","date":"2017-09-23T13:50:09.000Z","slug":"2017-09-23-单例模式-PHP实现","published":true,"updated":"2024-09-02T09:06:11.421Z","_id":"cm0p092os000u3zsn8v579j0s","layout":"post","photos":[],"excerpt":"","path":"2017/09/23/2017-09-23-单例模式-PHP实现/","permalink":"https://yuekang.org.cn/2017/09/23/2017-09-23-%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F-PHP%E5%AE%9E%E7%8E%B0/","__post":true},"__post":true}