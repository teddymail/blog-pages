{"title":"使用mysql-router工具实现数据库读写分离，数据库负载均衡","date":"2017-07-28T06:10:58.000Z","source":"_posts/2017-07-28.使用mysql-router工具实现数据库读写分离，数据库负载均衡.md","raw":"---\ntitle: 使用mysql-router工具实现数据库读写分离，数据库负载均衡\ndate: 2017-07-28 14:10:58\ntags: [mysql,mysql-router]\n---\n\n>研究公司oFrame框架发现，我们框架内大量的sql扫表语句严重的影响了数据查询速度和产品使用的各种问题，为此我准备先从第一步入手去增数据的性能，让我们一起学一下吧.\n\n### 一、 环境准备\n- mysql-router 简单的负载均衡组件\n- mysql5.6        mysql\n- centos7\n- Vmware\n\n** mysql-router 简介 **\n\nMySQL的路由器是轻量级的中间件，提供您的应用程序和任何后端MySQL服务器之间的透明路由。它可用于各种各样的使用情况，如通过有效的路由数据库流量到合适的后端MySQL服务器提供高可用性和可扩展性。可插拔的体系结构还使开发者来扩展MySQL的路由器自定义的用例。\n\n1. 故障转移\n\n典型地，高度可用的MySQL设置由一个单一的主站和多个从机，并且它是由应用程序来处理故障切换，在情况下，MySQL主变得不可用。使用MySQL路由器，应用程序连接将被透明基于负载平衡策略路由，不实现自定义应用程序代码。\n\n2. 负载均衡\n\nMySQL的路由器通过在服务器池分配数据库的连接提供了额外的可扩展性和性能。举例来说，如果你有一个复制的一套MySQL服务器的，MySQL的路由器可以在一个循环的方式分发应用程序连接到他们。\n\n3. 可插入式架构\n\nMySQL的路由器的可插入式架构使MySQL的开发人员能够轻松地与附加功能延伸产品，以及提供MySQL用户能够创建提供了无限的可能性自己的自定义插件的能力。MySQL的路由器目前包括一些核心插件，其中包括：\n\n连接路由插件，它确实基于连接的路由，这意味着它转发MySQL的数据包发送到后端服务器，而不检查或修改它们，从而提供最大的吞吐量。\n的元数据高速缓存插件，它提供了透明的客户端负载平衡，路由和故障转移到组复制和InnoDB群集。\n\n![mysql-router结构示意图](http://img.yuekang.org.cn/blog/images/mysql_router.png)\n\n### 二、环境搭建\n\n>这里centos搭建和Vmware不再阐述，mysql的安装也不在讲解，重点讲解配置步骤和实现mysql-router功能\n\n1. 安装mysql-router\n\n进入官网下载页面：[点我去往下载页面](https://dev.mysql.com/downloads/router/)\n\n![mysql-router下载页面](http://img.yuekang.org.cn/blog/images/MySQL%20%20%20%20Download%20MySQL%20Router.png)\n\n这里我选择Red Hat Enterprise Linux 7 / Oracle Linux 7也就是上图中的第一个rpm包进行下载\n\n为了在虚拟机中能够方便的复制，我这里下载过程中复制下载地址到虚拟机中使用**[ wget ]**命令进行下载\n\n```shell\n[root@localhost ~]# wget https://cdn.mysql.com//Downloads/MySQL-Router/mysql-router-2.1.4-1.el7.x86_64.rpm\n\n--2017-07-28 14:57:02--  https://cdn.mysql.com//Downloads/MySQL-Router/mysql-router-2.1.4-1.el7.x86_64\n.rpm\nResolving cdn.mysql.com (cdn.mysql.com)... 2.17.63.195\nConnecting to cdn.mysql.com (cdn.mysql.com)|2.17.63.195|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 1947576 (1.9M) [application/x-redhat-package-manager]\nSaving to: ‘mysql-router-2.1.4-1.el7.x86_64.rpm’\n\n100%[============================================================>] 1,947,576    773KB/s   in 2.5s   \n\n2017-07-28 14:57:10 (773 KB/s) - ‘mysql-router-2.1.4-1.el7.x86_64.rpm’ saved [1947576/1947576]\n\n[root@localhost ~]# rpm -i mysql-router-2.1.4-1.el7.x86_64.rpm\n\n```\n\n经过上面的步骤mysql-router已经安装完毕，这里mysql安装不在叙述\n\n\n### 三、负载均衡架构规划\n\n>我由于使用的是虚拟机我这里设定以下几个服务器\n\n1.Mysql Middleware 安装着mysql-router专门用于mysql入口负责机器的主从分配等问题\n\n2.Mysql Master 数据库主库，用于数据的读写\n\n3.Mysql Salve 数据库从库\n\n我对结构做了如下划分和IP分配，详情见图:\n\n![结构规划图](http://img.yuekang.org.cn/blog/images/%E7%BB%93%E6%9E%84%E5%9B%BE%E7%81%B0%E5%BA%95.png)\n\n\n### 四、配置服务\n\n1.Mysql Middleware (router主机)\n\n>默认rpm安装位置在/usr/bin/mysqlrouter 为了个人意愿我把日志logs和配置文件mysqlrouter.ini都存放在/usr/local/mysql-router下\n\n下面开始新建配置文件，设置port:8000为读写端口 port:8001为只读端口\n```shell\n[root@localhost mysql-router]# mkdir logs\n[root@localhost mysql-router]# vi mysqlrouter.ini\n\n[DEFAULT]              \nlogging_folder=usr/local/mysql-router/logs                                                         \n\n[logger]                                                                  \nlevel=INFO                                                                                    \n[routing:basic_failover]                                                                              \nbind_address=192.168.1.186                                                                          \nbind_port=000                                                                                      \ndestinations=192.168.1.189:3306                                                                     \nmode=read-write                                                                                     \nmax_connections=1024                                                                                \nmax_connect_errors=100                                                                              \nclient_connect_timeout=9                                                                        \n[routing:balancing]\n# 绑定router的IP即可                                               \nbind_address=192.168.1.186                                                #绑定端口                \nbind_port=8001                                                            #数据库地址，会轮训访问                      \ndestinations = 192.168.1.193:3306\n#指定模式为只读\nmode=read-only                                                            #设置最大连接数        \nmax_connections=65535\nmax_connect_errors=100\nclient_connect_timeout = 9            \n[keepalive]                                                               \ninterval = 60\n```\n\n以上是配置文件内容，注释了一部分\n\n- 启动mysqlrouter(设置自己的配置文件即可，我已经在配置文件目录了就按照下方启动即可)\n\n```shell\n[root@localhost mysql-router]# mysqlrouter -c ./mysqlrouter.ini &\n```\n\n - 验证mysqlrouter是否启动（下图情况为启动成功）\n\n ```shell\n [root@localhost mysql-router]# netstat -tunlp|grep mysqlrouter                               \n tcp        0      0 0.0.0.0:8000            0.0.0.0:*               LISTEN      71271/mysqlrouter     \n tcp        0      0 0.0.0.0:8001            0.0.0.0:*               LISTEN      71271/mysqlrouter\n ```\n\n 经过以上步骤已经完成router配置了，如果主库从库都可以的话即可使用客户端通过8000端口访问测试，如果不能访问通过下面这组命令查看错误日志\n\n ```shell\n[root@localhost mysql-router]# tail logs/mysqlrouter.log\n ```\n\n2.Mysql Master 数据库主库\n\n - 配置从库复制账号\n\n```mysql\nMySQL [(none)]> grant replication scale on *.* to '账号名'@'主机域' identifed by '账号密码'；\nMySQL [(none)]> flush privileges;\n```\n\n - 配置主库的主从复制文件my.ini主要增加或修改一下选项\n\n```\n\n #服务器ID唯一标识，错了，无法复制\n server-id = 1\n #指定复制库\n binlog-do-db=text\n #以下数据库不复制\n binlog-ignore-db=mysql\n\n```\n\n 经过修改以后从其mysql主库的任务就完成了，接下来配置从库\n\n 3. Mysql Salve 数据库从库(设定主库信息进行读写配置)\n\n登入数据库后查看服务器ID不可以和主库相同，切记！\n\n```mysql\nMySQL [(none)]> show variables like 'server_id';\n+---------------+-------+\n| Variable_name | Value |\n+---------------+-------+\n| server_id     | 2     |\n+---------------+-------+\n1 row in set (0.02 sec)\n```\n\n查询主库配置信息\n\n```mysql\nMySQL [(none)]> show master status \\G\n\n             File: mysql-bin.000006\n         Position: 2647\n     Binlog_Do_DB: text\n Binlog_Ignore_DB: mysql\nExecuted_Gtid_Set:\n1 row in set (0.00 sec)\n```\n\n获取File和Position即可\n\n\n写入主库信息\n\n```mysql\nMySQL [(none)]> change master to\n    ->master_host='192.168.1.189',//主库地址\n    ->master_port=3306,          //主库端口      \n    ->master_user='master',      //主库同步账户名             \n    ->master_password='master',  //同步账号密码\n    ->master_log_file='mysql-bin.000005',//对应主库File\n    ->master_log_pos=3195;//对应主库Position                                                 \nQuery OK, 0 rows affected, 2 warnings (0.02 sec)\n\nMySQL [(none)]> start slave;   //启动同步\nQuery OK, 0 rows affected (0.00 sec)\n```\n\n为了保证数据同步，请一定要空表操作，避免报错\n\n如果同步请使用MySQL [(none)]> show slave status \\G 查看具体错误\n\n\n其它从库全部遵循这个配置原则即可完成，多少个从库都可以\n\n\n### 五、 总结\n\n通过本次学习我对数据库负载均衡有了很大的了解，我以后也会继续学习更深入的集群化知识，为以后架构师的梦想做知识筹备，也希望我出的这个经验分享能给大家一个很好的参考，也是目前能提高公司产品服务器这块速度慢，在并发情况下发生数据库罢工的解决方案，目前这个演示仅仅是一个主库和从库，大家回去练习可以多建立从库进行大并发访问测试，今天的分享就到这里，祝大家工作顺利。\n","slug":"2017-07-28-使用mysql-router工具实现数据库读写分离，数据库负载均衡","published":true,"updated":"2024-09-08T06:16:56.729Z","_id":"cm0w4eg10000qetsnamiu95xr","comments":true,"layout":"post","photos":[],"html":"<blockquote>\n<p>研究公司oFrame框架发现，我们框架内大量的sql扫表语句严重的影响了数据查询速度和产品使用的各种问题，为此我准备先从第一步入手去增数据的性能，让我们一起学一下吧.</p>\n</blockquote>\n<h3 id=\"一、-环境准备\"><a href=\"#一、-环境准备\" class=\"headerlink\" title=\"一、 环境准备\"></a>一、 环境准备</h3><ul>\n<li>mysql-router 简单的负载均衡组件</li>\n<li>mysql5.6        mysql</li>\n<li>centos7</li>\n<li>Vmware</li>\n</ul>\n<p>** mysql-router 简介 **</p>\n<p>MySQL的路由器是轻量级的中间件，提供您的应用程序和任何后端MySQL服务器之间的透明路由。它可用于各种各样的使用情况，如通过有效的路由数据库流量到合适的后端MySQL服务器提供高可用性和可扩展性。可插拔的体系结构还使开发者来扩展MySQL的路由器自定义的用例。</p>\n<ol>\n<li>故障转移</li>\n</ol>\n<p>典型地，高度可用的MySQL设置由一个单一的主站和多个从机，并且它是由应用程序来处理故障切换，在情况下，MySQL主变得不可用。使用MySQL路由器，应用程序连接将被透明基于负载平衡策略路由，不实现自定义应用程序代码。</p>\n<ol start=\"2\">\n<li>负载均衡</li>\n</ol>\n<p>MySQL的路由器通过在服务器池分配数据库的连接提供了额外的可扩展性和性能。举例来说，如果你有一个复制的一套MySQL服务器的，MySQL的路由器可以在一个循环的方式分发应用程序连接到他们。</p>\n<ol start=\"3\">\n<li>可插入式架构</li>\n</ol>\n<p>MySQL的路由器的可插入式架构使MySQL的开发人员能够轻松地与附加功能延伸产品，以及提供MySQL用户能够创建提供了无限的可能性自己的自定义插件的能力。MySQL的路由器目前包括一些核心插件，其中包括：</p>\n<p>连接路由插件，它确实基于连接的路由，这意味着它转发MySQL的数据包发送到后端服务器，而不检查或修改它们，从而提供最大的吞吐量。<br>的元数据高速缓存插件，它提供了透明的客户端负载平衡，路由和故障转移到组复制和InnoDB群集。</p>\n<p><img src=\"http://img.yuekang.org.cn/blog/images/mysql_router.png\" alt=\"mysql-router结构示意图\"></p>\n<h3 id=\"二、环境搭建\"><a href=\"#二、环境搭建\" class=\"headerlink\" title=\"二、环境搭建\"></a>二、环境搭建</h3><blockquote>\n<p>这里centos搭建和Vmware不再阐述，mysql的安装也不在讲解，重点讲解配置步骤和实现mysql-router功能</p>\n</blockquote>\n<ol>\n<li>安装mysql-router</li>\n</ol>\n<p>进入官网下载页面：<a href=\"https://dev.mysql.com/downloads/router/\">点我去往下载页面</a></p>\n<p><img src=\"http://img.yuekang.org.cn/blog/images/MySQL%20%20%20%20Download%20MySQL%20Router.png\" alt=\"mysql-router下载页面\"></p>\n<p>这里我选择Red Hat Enterprise Linux 7 &#x2F; Oracle Linux 7也就是上图中的第一个rpm包进行下载</p>\n<p>为了在虚拟机中能够方便的复制，我这里下载过程中复制下载地址到虚拟机中使用**[ wget ]**命令进行下载</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# wget https://cdn.mysql.com//Downloads/MySQL-Router/mysql-router-2.1.4-1.el7.x86_64.rpm</span><br><span class=\"line\"></span><br><span class=\"line\">--2017-07-28 14:57:02--  https://cdn.mysql.com//Downloads/MySQL-Router/mysql-router-2.1.4-1.el7.x86_64</span><br><span class=\"line\">.rpm</span><br><span class=\"line\">Resolving cdn.mysql.com (cdn.mysql.com)... 2.17.63.195</span><br><span class=\"line\">Connecting to cdn.mysql.com (cdn.mysql.com)|2.17.63.195|:443... connected.</span><br><span class=\"line\">HTTP request sent, awaiting response... 200 OK</span><br><span class=\"line\">Length: 1947576 (1.9M) [application/x-redhat-package-manager]</span><br><span class=\"line\">Saving to: ‘mysql-router-2.1.4-1.el7.x86_64.rpm’</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">100%</span><span class=\"language-bash\">[============================================================&gt;] 1,947,576    773KB/s   <span class=\"keyword\">in</span> 2.5s</span>   </span><br><span class=\"line\"></span><br><span class=\"line\">2017-07-28 14:57:10 (773 KB/s) - ‘mysql-router-2.1.4-1.el7.x86_64.rpm’ saved [1947576/1947576]</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost ~]# rpm -i mysql-router-2.1.4-1.el7.x86_64.rpm</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>经过上面的步骤mysql-router已经安装完毕，这里mysql安装不在叙述</p>\n<h3 id=\"三、负载均衡架构规划\"><a href=\"#三、负载均衡架构规划\" class=\"headerlink\" title=\"三、负载均衡架构规划\"></a>三、负载均衡架构规划</h3><blockquote>\n<p>我由于使用的是虚拟机我这里设定以下几个服务器</p>\n</blockquote>\n<p>1.Mysql Middleware 安装着mysql-router专门用于mysql入口负责机器的主从分配等问题</p>\n<p>2.Mysql Master 数据库主库，用于数据的读写</p>\n<p>3.Mysql Salve 数据库从库</p>\n<p>我对结构做了如下划分和IP分配，详情见图:</p>\n<p><img src=\"http://img.yuekang.org.cn/blog/images/%E7%BB%93%E6%9E%84%E5%9B%BE%E7%81%B0%E5%BA%95.png\" alt=\"结构规划图\"></p>\n<h3 id=\"四、配置服务\"><a href=\"#四、配置服务\" class=\"headerlink\" title=\"四、配置服务\"></a>四、配置服务</h3><p>1.Mysql Middleware (router主机)</p>\n<blockquote>\n<p>默认rpm安装位置在&#x2F;usr&#x2F;bin&#x2F;mysqlrouter 为了个人意愿我把日志logs和配置文件mysqlrouter.ini都存放在&#x2F;usr&#x2F;local&#x2F;mysql-router下</p>\n</blockquote>\n<p>下面开始新建配置文件，设置port:8000为读写端口 port:8001为只读端口</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost mysql-router]# mkdir logs</span><br><span class=\"line\">[root@localhost mysql-router]# vi mysqlrouter.ini</span><br><span class=\"line\"></span><br><span class=\"line\">[DEFAULT]              </span><br><span class=\"line\">logging_folder=usr/local/mysql-router/logs                                                         </span><br><span class=\"line\"></span><br><span class=\"line\">[logger]                                                                  </span><br><span class=\"line\">level=INFO                                                                                    </span><br><span class=\"line\">[routing:basic_failover]                                                                              </span><br><span class=\"line\">bind_address=192.168.1.186                                                                          </span><br><span class=\"line\">bind_port=000                                                                                      </span><br><span class=\"line\">destinations=192.168.1.189:3306                                                                     </span><br><span class=\"line\">mode=read-write                                                                                     </span><br><span class=\"line\">max_connections=1024                                                                                </span><br><span class=\"line\">max_connect_errors=100                                                                              </span><br><span class=\"line\">client_connect_timeout=9                                                                        </span><br><span class=\"line\">[routing:balancing]</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">绑定router的IP即可</span>                                               </span><br><span class=\"line\">bind_address=192.168.1.186                                                #绑定端口                </span><br><span class=\"line\">bind_port=8001                                                            #数据库地址，会轮训访问                      </span><br><span class=\"line\">destinations = 192.168.1.193:3306</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">指定模式为只读</span></span><br><span class=\"line\">mode=read-only                                                            #设置最大连接数        </span><br><span class=\"line\">max_connections=65535</span><br><span class=\"line\">max_connect_errors=100</span><br><span class=\"line\">client_connect_timeout = 9            </span><br><span class=\"line\">[keepalive]                                                               </span><br><span class=\"line\">interval = 60</span><br></pre></td></tr></table></figure>\n\n<p>以上是配置文件内容，注释了一部分</p>\n<ul>\n<li>启动mysqlrouter(设置自己的配置文件即可，我已经在配置文件目录了就按照下方启动即可)</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost mysql-router]# mysqlrouter -c ./mysqlrouter.ini &amp;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>验证mysqlrouter是否启动（下图情况为启动成功）</li>\n</ul>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost mysql-router]# netstat -tunlp|grep mysqlrouter                               </span><br><span class=\"line\">tcp        0      0 0.0.0.0:8000            0.0.0.0:*               LISTEN      71271/mysqlrouter     </span><br><span class=\"line\">tcp        0      0 0.0.0.0:8001            0.0.0.0:*               LISTEN      71271/mysqlrouter</span><br></pre></td></tr></table></figure>\n\n<p> 经过以上步骤已经完成router配置了，如果主库从库都可以的话即可使用客户端通过8000端口访问测试，如果不能访问通过下面这组命令查看错误日志</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost mysql-router]# tail logs/mysqlrouter.log</span><br></pre></td></tr></table></figure>\n\n<p>2.Mysql Master 数据库主库</p>\n<ul>\n<li>配置从库复制账号</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MySQL [(none)]&gt; grant replication scale on *.* to &#x27;账号名&#x27;@&#x27;主机域&#x27; identifed by &#x27;账号密码&#x27;；</span><br><span class=\"line\">MySQL [(none)]&gt; flush privileges;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>配置主库的主从复制文件my.ini主要增加或修改一下选项</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#服务器ID唯一标识，错了，无法复制</span><br><span class=\"line\">server-id = 1</span><br><span class=\"line\">#指定复制库</span><br><span class=\"line\">binlog-do-db=text</span><br><span class=\"line\">#以下数据库不复制</span><br><span class=\"line\">binlog-ignore-db=mysql</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p> 经过修改以后从其mysql主库的任务就完成了，接下来配置从库</p>\n<ol start=\"3\">\n<li>Mysql Salve 数据库从库(设定主库信息进行读写配置)</li>\n</ol>\n<p>登入数据库后查看服务器ID不可以和主库相同，切记！</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MySQL [(none)]&gt; show variables like &#x27;server_id&#x27;;</span><br><span class=\"line\">+---------------+-------+</span><br><span class=\"line\">| Variable_name | Value |</span><br><span class=\"line\">+---------------+-------+</span><br><span class=\"line\">| server_id     | 2     |</span><br><span class=\"line\">+---------------+-------+</span><br><span class=\"line\">1 row in set (0.02 sec)</span><br></pre></td></tr></table></figure>\n\n<p>查询主库配置信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MySQL [(none)]&gt; show master status \\G</span><br><span class=\"line\"></span><br><span class=\"line\">             File: mysql-bin.000006</span><br><span class=\"line\">         Position: 2647</span><br><span class=\"line\">     Binlog_Do_DB: text</span><br><span class=\"line\"> Binlog_Ignore_DB: mysql</span><br><span class=\"line\">Executed_Gtid_Set:</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n\n<p>获取File和Position即可</p>\n<p>写入主库信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MySQL [(none)]&gt; change master to</span><br><span class=\"line\">    -&gt;master_host=&#x27;192.168.1.189&#x27;,//主库地址</span><br><span class=\"line\">    -&gt;master_port=3306,          //主库端口      </span><br><span class=\"line\">    -&gt;master_user=&#x27;master&#x27;,      //主库同步账户名             </span><br><span class=\"line\">    -&gt;master_password=&#x27;master&#x27;,  //同步账号密码</span><br><span class=\"line\">    -&gt;master_log_file=&#x27;mysql-bin.000005&#x27;,//对应主库File</span><br><span class=\"line\">    -&gt;master_log_pos=3195;//对应主库Position                                                 </span><br><span class=\"line\">Query OK, 0 rows affected, 2 warnings (0.02 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">MySQL [(none)]&gt; start slave;   //启动同步</span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure>\n\n<p>为了保证数据同步，请一定要空表操作，避免报错</p>\n<p>如果同步请使用MySQL [(none)]&gt; show slave status \\G 查看具体错误</p>\n<p>其它从库全部遵循这个配置原则即可完成，多少个从库都可以</p>\n<h3 id=\"五、-总结\"><a href=\"#五、-总结\" class=\"headerlink\" title=\"五、 总结\"></a>五、 总结</h3><p>通过本次学习我对数据库负载均衡有了很大的了解，我以后也会继续学习更深入的集群化知识，为以后架构师的梦想做知识筹备，也希望我出的这个经验分享能给大家一个很好的参考，也是目前能提高公司产品服务器这块速度慢，在并发情况下发生数据库罢工的解决方案，目前这个演示仅仅是一个主库和从库，大家回去练习可以多建立从库进行大并发访问测试，今天的分享就到这里，祝大家工作顺利。</p>\n","excerpt":"","more":"<blockquote>\n<p>研究公司oFrame框架发现，我们框架内大量的sql扫表语句严重的影响了数据查询速度和产品使用的各种问题，为此我准备先从第一步入手去增数据的性能，让我们一起学一下吧.</p>\n</blockquote>\n<h3 id=\"一、-环境准备\"><a href=\"#一、-环境准备\" class=\"headerlink\" title=\"一、 环境准备\"></a>一、 环境准备</h3><ul>\n<li>mysql-router 简单的负载均衡组件</li>\n<li>mysql5.6        mysql</li>\n<li>centos7</li>\n<li>Vmware</li>\n</ul>\n<p>** mysql-router 简介 **</p>\n<p>MySQL的路由器是轻量级的中间件，提供您的应用程序和任何后端MySQL服务器之间的透明路由。它可用于各种各样的使用情况，如通过有效的路由数据库流量到合适的后端MySQL服务器提供高可用性和可扩展性。可插拔的体系结构还使开发者来扩展MySQL的路由器自定义的用例。</p>\n<ol>\n<li>故障转移</li>\n</ol>\n<p>典型地，高度可用的MySQL设置由一个单一的主站和多个从机，并且它是由应用程序来处理故障切换，在情况下，MySQL主变得不可用。使用MySQL路由器，应用程序连接将被透明基于负载平衡策略路由，不实现自定义应用程序代码。</p>\n<ol start=\"2\">\n<li>负载均衡</li>\n</ol>\n<p>MySQL的路由器通过在服务器池分配数据库的连接提供了额外的可扩展性和性能。举例来说，如果你有一个复制的一套MySQL服务器的，MySQL的路由器可以在一个循环的方式分发应用程序连接到他们。</p>\n<ol start=\"3\">\n<li>可插入式架构</li>\n</ol>\n<p>MySQL的路由器的可插入式架构使MySQL的开发人员能够轻松地与附加功能延伸产品，以及提供MySQL用户能够创建提供了无限的可能性自己的自定义插件的能力。MySQL的路由器目前包括一些核心插件，其中包括：</p>\n<p>连接路由插件，它确实基于连接的路由，这意味着它转发MySQL的数据包发送到后端服务器，而不检查或修改它们，从而提供最大的吞吐量。<br>的元数据高速缓存插件，它提供了透明的客户端负载平衡，路由和故障转移到组复制和InnoDB群集。</p>\n<p><img src=\"http://img.yuekang.org.cn/blog/images/mysql_router.png\" alt=\"mysql-router结构示意图\"></p>\n<h3 id=\"二、环境搭建\"><a href=\"#二、环境搭建\" class=\"headerlink\" title=\"二、环境搭建\"></a>二、环境搭建</h3><blockquote>\n<p>这里centos搭建和Vmware不再阐述，mysql的安装也不在讲解，重点讲解配置步骤和实现mysql-router功能</p>\n</blockquote>\n<ol>\n<li>安装mysql-router</li>\n</ol>\n<p>进入官网下载页面：<a href=\"https://dev.mysql.com/downloads/router/\">点我去往下载页面</a></p>\n<p><img src=\"http://img.yuekang.org.cn/blog/images/MySQL%20%20%20%20Download%20MySQL%20Router.png\" alt=\"mysql-router下载页面\"></p>\n<p>这里我选择Red Hat Enterprise Linux 7 &#x2F; Oracle Linux 7也就是上图中的第一个rpm包进行下载</p>\n<p>为了在虚拟机中能够方便的复制，我这里下载过程中复制下载地址到虚拟机中使用**[ wget ]**命令进行下载</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# wget https://cdn.mysql.com//Downloads/MySQL-Router/mysql-router-2.1.4-1.el7.x86_64.rpm</span><br><span class=\"line\"></span><br><span class=\"line\">--2017-07-28 14:57:02--  https://cdn.mysql.com//Downloads/MySQL-Router/mysql-router-2.1.4-1.el7.x86_64</span><br><span class=\"line\">.rpm</span><br><span class=\"line\">Resolving cdn.mysql.com (cdn.mysql.com)... 2.17.63.195</span><br><span class=\"line\">Connecting to cdn.mysql.com (cdn.mysql.com)|2.17.63.195|:443... connected.</span><br><span class=\"line\">HTTP request sent, awaiting response... 200 OK</span><br><span class=\"line\">Length: 1947576 (1.9M) [application/x-redhat-package-manager]</span><br><span class=\"line\">Saving to: ‘mysql-router-2.1.4-1.el7.x86_64.rpm’</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">100%</span><span class=\"language-bash\">[============================================================&gt;] 1,947,576    773KB/s   <span class=\"keyword\">in</span> 2.5s</span>   </span><br><span class=\"line\"></span><br><span class=\"line\">2017-07-28 14:57:10 (773 KB/s) - ‘mysql-router-2.1.4-1.el7.x86_64.rpm’ saved [1947576/1947576]</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost ~]# rpm -i mysql-router-2.1.4-1.el7.x86_64.rpm</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>经过上面的步骤mysql-router已经安装完毕，这里mysql安装不在叙述</p>\n<h3 id=\"三、负载均衡架构规划\"><a href=\"#三、负载均衡架构规划\" class=\"headerlink\" title=\"三、负载均衡架构规划\"></a>三、负载均衡架构规划</h3><blockquote>\n<p>我由于使用的是虚拟机我这里设定以下几个服务器</p>\n</blockquote>\n<p>1.Mysql Middleware 安装着mysql-router专门用于mysql入口负责机器的主从分配等问题</p>\n<p>2.Mysql Master 数据库主库，用于数据的读写</p>\n<p>3.Mysql Salve 数据库从库</p>\n<p>我对结构做了如下划分和IP分配，详情见图:</p>\n<p><img src=\"http://img.yuekang.org.cn/blog/images/%E7%BB%93%E6%9E%84%E5%9B%BE%E7%81%B0%E5%BA%95.png\" alt=\"结构规划图\"></p>\n<h3 id=\"四、配置服务\"><a href=\"#四、配置服务\" class=\"headerlink\" title=\"四、配置服务\"></a>四、配置服务</h3><p>1.Mysql Middleware (router主机)</p>\n<blockquote>\n<p>默认rpm安装位置在&#x2F;usr&#x2F;bin&#x2F;mysqlrouter 为了个人意愿我把日志logs和配置文件mysqlrouter.ini都存放在&#x2F;usr&#x2F;local&#x2F;mysql-router下</p>\n</blockquote>\n<p>下面开始新建配置文件，设置port:8000为读写端口 port:8001为只读端口</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost mysql-router]# mkdir logs</span><br><span class=\"line\">[root@localhost mysql-router]# vi mysqlrouter.ini</span><br><span class=\"line\"></span><br><span class=\"line\">[DEFAULT]              </span><br><span class=\"line\">logging_folder=usr/local/mysql-router/logs                                                         </span><br><span class=\"line\"></span><br><span class=\"line\">[logger]                                                                  </span><br><span class=\"line\">level=INFO                                                                                    </span><br><span class=\"line\">[routing:basic_failover]                                                                              </span><br><span class=\"line\">bind_address=192.168.1.186                                                                          </span><br><span class=\"line\">bind_port=000                                                                                      </span><br><span class=\"line\">destinations=192.168.1.189:3306                                                                     </span><br><span class=\"line\">mode=read-write                                                                                     </span><br><span class=\"line\">max_connections=1024                                                                                </span><br><span class=\"line\">max_connect_errors=100                                                                              </span><br><span class=\"line\">client_connect_timeout=9                                                                        </span><br><span class=\"line\">[routing:balancing]</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">绑定router的IP即可</span>                                               </span><br><span class=\"line\">bind_address=192.168.1.186                                                #绑定端口                </span><br><span class=\"line\">bind_port=8001                                                            #数据库地址，会轮训访问                      </span><br><span class=\"line\">destinations = 192.168.1.193:3306</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">指定模式为只读</span></span><br><span class=\"line\">mode=read-only                                                            #设置最大连接数        </span><br><span class=\"line\">max_connections=65535</span><br><span class=\"line\">max_connect_errors=100</span><br><span class=\"line\">client_connect_timeout = 9            </span><br><span class=\"line\">[keepalive]                                                               </span><br><span class=\"line\">interval = 60</span><br></pre></td></tr></table></figure>\n\n<p>以上是配置文件内容，注释了一部分</p>\n<ul>\n<li>启动mysqlrouter(设置自己的配置文件即可，我已经在配置文件目录了就按照下方启动即可)</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost mysql-router]# mysqlrouter -c ./mysqlrouter.ini &amp;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>验证mysqlrouter是否启动（下图情况为启动成功）</li>\n</ul>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost mysql-router]# netstat -tunlp|grep mysqlrouter                               </span><br><span class=\"line\">tcp        0      0 0.0.0.0:8000            0.0.0.0:*               LISTEN      71271/mysqlrouter     </span><br><span class=\"line\">tcp        0      0 0.0.0.0:8001            0.0.0.0:*               LISTEN      71271/mysqlrouter</span><br></pre></td></tr></table></figure>\n\n<p> 经过以上步骤已经完成router配置了，如果主库从库都可以的话即可使用客户端通过8000端口访问测试，如果不能访问通过下面这组命令查看错误日志</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost mysql-router]# tail logs/mysqlrouter.log</span><br></pre></td></tr></table></figure>\n\n<p>2.Mysql Master 数据库主库</p>\n<ul>\n<li>配置从库复制账号</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MySQL [(none)]&gt; grant replication scale on *.* to &#x27;账号名&#x27;@&#x27;主机域&#x27; identifed by &#x27;账号密码&#x27;；</span><br><span class=\"line\">MySQL [(none)]&gt; flush privileges;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>配置主库的主从复制文件my.ini主要增加或修改一下选项</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#服务器ID唯一标识，错了，无法复制</span><br><span class=\"line\">server-id = 1</span><br><span class=\"line\">#指定复制库</span><br><span class=\"line\">binlog-do-db=text</span><br><span class=\"line\">#以下数据库不复制</span><br><span class=\"line\">binlog-ignore-db=mysql</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p> 经过修改以后从其mysql主库的任务就完成了，接下来配置从库</p>\n<ol start=\"3\">\n<li>Mysql Salve 数据库从库(设定主库信息进行读写配置)</li>\n</ol>\n<p>登入数据库后查看服务器ID不可以和主库相同，切记！</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MySQL [(none)]&gt; show variables like &#x27;server_id&#x27;;</span><br><span class=\"line\">+---------------+-------+</span><br><span class=\"line\">| Variable_name | Value |</span><br><span class=\"line\">+---------------+-------+</span><br><span class=\"line\">| server_id     | 2     |</span><br><span class=\"line\">+---------------+-------+</span><br><span class=\"line\">1 row in set (0.02 sec)</span><br></pre></td></tr></table></figure>\n\n<p>查询主库配置信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MySQL [(none)]&gt; show master status \\G</span><br><span class=\"line\"></span><br><span class=\"line\">             File: mysql-bin.000006</span><br><span class=\"line\">         Position: 2647</span><br><span class=\"line\">     Binlog_Do_DB: text</span><br><span class=\"line\"> Binlog_Ignore_DB: mysql</span><br><span class=\"line\">Executed_Gtid_Set:</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n\n<p>获取File和Position即可</p>\n<p>写入主库信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MySQL [(none)]&gt; change master to</span><br><span class=\"line\">    -&gt;master_host=&#x27;192.168.1.189&#x27;,//主库地址</span><br><span class=\"line\">    -&gt;master_port=3306,          //主库端口      </span><br><span class=\"line\">    -&gt;master_user=&#x27;master&#x27;,      //主库同步账户名             </span><br><span class=\"line\">    -&gt;master_password=&#x27;master&#x27;,  //同步账号密码</span><br><span class=\"line\">    -&gt;master_log_file=&#x27;mysql-bin.000005&#x27;,//对应主库File</span><br><span class=\"line\">    -&gt;master_log_pos=3195;//对应主库Position                                                 </span><br><span class=\"line\">Query OK, 0 rows affected, 2 warnings (0.02 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">MySQL [(none)]&gt; start slave;   //启动同步</span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure>\n\n<p>为了保证数据同步，请一定要空表操作，避免报错</p>\n<p>如果同步请使用MySQL [(none)]&gt; show slave status \\G 查看具体错误</p>\n<p>其它从库全部遵循这个配置原则即可完成，多少个从库都可以</p>\n<h3 id=\"五、-总结\"><a href=\"#五、-总结\" class=\"headerlink\" title=\"五、 总结\"></a>五、 总结</h3><p>通过本次学习我对数据库负载均衡有了很大的了解，我以后也会继续学习更深入的集群化知识，为以后架构师的梦想做知识筹备，也希望我出的这个经验分享能给大家一个很好的参考，也是目前能提高公司产品服务器这块速度慢，在并发情况下发生数据库罢工的解决方案，目前这个演示仅仅是一个主库和从库，大家回去练习可以多建立从库进行大并发访问测试，今天的分享就到这里，祝大家工作顺利。</p>\n","path":"2017/07/28/2017-07-28-使用mysql-router工具实现数据库读写分离，数据库负载均衡/","permalink":"https://yuekang.org.cn/2017/07/28/2017-07-28-%E4%BD%BF%E7%94%A8mysql-router%E5%B7%A5%E5%85%B7%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB%EF%BC%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/","tags":[{"name":"mysql","_id":"cm0w4eg1q002tetsnb1509034","slug":"mysql","path":"tags/mysql/","permalink":"https://yuekang.org.cn/tags/mysql/","length":5},{"name":"mysql-router","_id":"cm0w4eg1r002yetsn16muabtw","slug":"mysql-router","path":"tags/mysql-router/","permalink":"https://yuekang.org.cn/tags/mysql-router/","length":1}],"categories":[],"prev":{"title":"23种设计模式英文中文对照","date":"2017-09-11T02:00:06.000Z","slug":"2017-09-11-23种设计模式英文中文对照","published":true,"updated":"2024-09-02T09:06:11.421Z","_id":"cm0w4eg11000setsn7elj12kk","layout":"post","photos":[],"excerpt":"","path":"2017/09/11/2017-09-11-23种设计模式英文中文对照/","permalink":"https://yuekang.org.cn/2017/09/11/2017-09-11-23%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E8%8B%B1%E6%96%87%E4%B8%AD%E6%96%87%E5%AF%B9%E7%85%A7/","__post":true},"next":{"title":"好久没写博客了","date":"2017-07-26T14:30:55.000Z","slug":"2017-07-26-好久没写博客了","published":true,"updated":"2024-09-02T09:06:11.421Z","_id":"cm0w4eg0z000oetsn52623gmj","layout":"post","photos":[],"excerpt":"","path":"2017/07/26/2017-07-26-好久没写博客了/","permalink":"https://yuekang.org.cn/2017/07/26/2017-07-26-%E5%A5%BD%E4%B9%85%E6%B2%A1%E5%86%99%E5%8D%9A%E5%AE%A2%E4%BA%86/","__post":true},"__post":true}