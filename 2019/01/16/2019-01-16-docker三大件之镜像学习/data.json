{"title":"docker三大件之镜像学习","date":"2019-01-16T04:27:23.000Z","source":"_posts/2019-01-16.docker三大件之镜像学习.md","raw":"---\ntitle: docker三大件之镜像学习\ndate: 2019-01-16 12:27:23\ntags: [docker,镜像]\n---\n\n>操作系统分为内核和用户空间，，对于linux而言，内核启动后，会挂载`root` 文件系统为其提供用户空间支持。而Docker镜像（Image），就相当于是一个`root`文件系统。比如官方镜像`ubuntu:18.04` 就包含了完整的一套最小的`root` 文件系统。\n\n>Docker镜像是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等文件外，还包含了一些运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。镜像不包含任何动态数据，其内容在构建后也不会被改变。\n\n## docker安装\n\n```\n\n```\n\n## 获取镜像\n\nDocker镜像仓库获取镜像的命令是`docker pull`。其格式为`docker pull [选项] [Docker Registry 地址[:端口号/]仓库名[:标签]]`\n\n拉取\n\n\n","slug":"2019-01-16-docker三大件之镜像学习","published":true,"updated":"2024-09-02T09:06:11.432Z","_id":"cm0xoldbf002n22sne0z33gzc","comments":true,"layout":"post","photos":[],"html":"<blockquote>\n<p>操作系统分为内核和用户空间，，对于linux而言，内核启动后，会挂载<code>root</code> 文件系统为其提供用户空间支持。而Docker镜像（Image），就相当于是一个<code>root</code>文件系统。比如官方镜像<code>ubuntu:18.04</code> 就包含了完整的一套最小的<code>root</code> 文件系统。</p>\n</blockquote>\n<blockquote>\n<p>Docker镜像是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等文件外，还包含了一些运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。镜像不包含任何动态数据，其内容在构建后也不会被改变。</p>\n</blockquote>\n<h2 id=\"docker安装\"><a href=\"#docker安装\" class=\"headerlink\" title=\"docker安装\"></a>docker安装</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"获取镜像\"><a href=\"#获取镜像\" class=\"headerlink\" title=\"获取镜像\"></a>获取镜像</h2><p>Docker镜像仓库获取镜像的命令是<code>docker pull</code>。其格式为<code>docker pull [选项] [Docker Registry 地址[:端口号/]仓库名[:标签]]</code></p>\n<p>拉取</p>\n","excerpt":"","more":"<blockquote>\n<p>操作系统分为内核和用户空间，，对于linux而言，内核启动后，会挂载<code>root</code> 文件系统为其提供用户空间支持。而Docker镜像（Image），就相当于是一个<code>root</code>文件系统。比如官方镜像<code>ubuntu:18.04</code> 就包含了完整的一套最小的<code>root</code> 文件系统。</p>\n</blockquote>\n<blockquote>\n<p>Docker镜像是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等文件外，还包含了一些运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。镜像不包含任何动态数据，其内容在构建后也不会被改变。</p>\n</blockquote>\n<h2 id=\"docker安装\"><a href=\"#docker安装\" class=\"headerlink\" title=\"docker安装\"></a>docker安装</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"获取镜像\"><a href=\"#获取镜像\" class=\"headerlink\" title=\"获取镜像\"></a>获取镜像</h2><p>Docker镜像仓库获取镜像的命令是<code>docker pull</code>。其格式为<code>docker pull [选项] [Docker Registry 地址[:端口号/]仓库名[:标签]]</code></p>\n<p>拉取</p>\n","path":"2019/01/16/2019-01-16-docker三大件之镜像学习/","permalink":"https://yuekang.org.cn/2019/01/16/2019-01-16-docker%E4%B8%89%E5%A4%A7%E4%BB%B6%E4%B9%8B%E9%95%9C%E5%83%8F%E5%AD%A6%E4%B9%A0/","tags":[{"name":"docker","_id":"cm0xoldc0007o22sn2twcewqi","slug":"docker","path":"tags/docker/","permalink":"https://yuekang.org.cn/tags/docker/","length":1},{"name":"镜像","_id":"cm0xoldc1007r22sna2io7pzk","slug":"镜像","path":"tags/镜像/","permalink":"https://yuekang.org.cn/tags/%E9%95%9C%E5%83%8F/","length":1}],"categories":[],"prev":{"title":"kubernetes搭建","date":"2019-04-07T10:54:34.000Z","slug":"2019-04-07-kubernetes搭建","published":true,"updated":"2024-09-11T07:55:25.643Z","_id":"cm0xoldbf002p22sndew71njo","layout":"post","photos":[],"excerpt":"","path":"2019/04/07/2019-04-07-kubernetes搭建/","permalink":"https://yuekang.org.cn/2019/04/07/2019-04-07-kubernetes%E6%90%AD%E5%BB%BA/","__post":true},"next":{"title":"RabbitMQ 系统架构和通信过程","date":"2019-01-15T14:55:18.000Z","slug":"2019-01-15-RabbitMQ-系统架构和通信过程","published":true,"updated":"2024-09-08T06:12:12.688Z","_id":"cm0xoldbe002l22sn91yzb2z0","layout":"post","photos":[],"excerpt":"","path":"2019/01/15/2019-01-15-RabbitMQ-系统架构和通信过程/","permalink":"https://yuekang.org.cn/2019/01/15/2019-01-15-RabbitMQ-%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E5%92%8C%E9%80%9A%E4%BF%A1%E8%BF%87%E7%A8%8B/","__post":true},"__post":true}